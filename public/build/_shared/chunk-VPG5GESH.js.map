{
  "version": 3,
  "sources": ["../../../src/ui/components/add-to-cart-button.tsx", "../../../src/ui/components/variant-selector.tsx"],
  "sourcesContent": ["import { useState } from 'react';\nimport { useLocalCart } from '../hooks/useLocalCart';\nimport { useAppContext } from '../app-context/provider';\nimport { ProductVariant } from '../../use-cases/contracts/ProductVariant';\n\nexport type VariantPack = VariantPackItem[];\n\nexport type VariantPackItem = {\n    variant: ProductVariant;\n    quantity: number;\n    key?: string; // a pack can have multiple items with the same variant...\n};\n\nexport const AddToCartBtn: React.FC<{\n    pack: VariantPack;\n    label?: string;\n}> = ({ pack, label = 'addToCart' }) => {\n    const [showTada, setShowTada] = useState(false);\n    const { dispatch: contextDispatch, _t } = useAppContext();\n    const { add } = useLocalCart();\n\n    const handleClick = () => {\n        setShowTada(true);\n        contextDispatch.addItemsToCart(pack.map((packitem: VariantPackItem) => packitem.variant));\n\n        pack.forEach((packitem: VariantPackItem) => {\n            add(\n                {\n                    name: packitem.variant.name,\n                    sku: packitem.variant.sku,\n                    price: packitem.variant.priceVariants.default.value,\n                },\n                packitem.quantity,\n            );\n        });\n        setTimeout(() => {\n            setShowTada(false);\n        }, 1500);\n    };\n\n    let defaultStock = pack.reduce((memo: number, packitem: VariantPackItem) => {\n        const defaultStockLocation = packitem.variant?.stockLocations?.default;\n        return memo + (defaultStockLocation?.stock || 0);\n    }, 0);\n\n    return (\n        <>\n            <button\n                className=\"bg-[#000] border px-10 py-3 relative overflow-hidden h-[50px] rounded-md text-[#fff] w-[200px] font-bold hover:bg-black-100 disabled:opacity-50 disabled:cursor-not-allowed\"\n                onClick={() => {\n                    handleClick();\n                }}\n                disabled={defaultStock < 1}\n            >\n                <span\n                    className={`w-[200] transition-all left-0 top-0 h-full w-full flex items-center justify-center absolute\n                    ${showTada ? 'scale-0' : 'scale-100'}`}\n                >\n                    {_t(label)}\n                </span>\n                <span\n                    className={`w-[200] text-3xl transition-all\tleft-0 top-0 h-full w-full flex items-center justify-center absolute ${\n                        showTada ? 'scale-100' : 'scale-0'\n                    }`}\n                >\n                    \uD83C\uDF89\n                </span>\n            </button>\n        </>\n    );\n};\n", "import { Image } from '@crystallize/reactjs-components/dist/image';\nimport { ProductVariant } from '~/use-cases/contracts/ProductVariant';\n\nfunction reduceAttributes(variants: ProductVariant[]) {\n    return variants.reduce((acc: Record<string, string[]>, variant: ProductVariant) => {\n        Object.keys(variant.attributes).forEach((key) => {\n            const value = variant.attributes[key];\n            if (!acc[key]) {\n                acc[key] = [];\n            }\n            if (!acc[key].includes(value)) {\n                acc[key].push(value);\n            }\n        });\n        return acc;\n    }, {});\n}\n\nfunction findMostSuitableVariant(variants: ProductVariant[], attributes: Record<string, string>) {\n    return variants.find((variant) => {\n        return Object.keys(attributes).every((key) => {\n            return variant.attributes[key] === attributes[key];\n        });\n    });\n}\n\nexport const VariantSelector: React.FC<{\n    variants: ProductVariant[];\n    selectedVariant: ProductVariant;\n    onVariantChange: Function;\n    renderingType: string;\n}> = ({ variants, selectedVariant, onVariantChange, renderingType = 'default' }) => {\n    const attributes = reduceAttributes(variants);\n\n    function onAttributeSelect(key: string, value: string) {\n        let variant = findMostSuitableVariant(variants, {\n            ...selectedVariant.attributes,\n            [key]: value,\n        });\n\n        if (!variant) {\n            variant = variants.find((variant) =>\n                Object.keys(variant.attributes).some((vkey) => vkey === key && variant.attributes[vkey] === value),\n            );\n        }\n\n        if (!variant) {\n            variant = variants.find((variant) => Object.keys(variant.attributes).some((vkey) => vkey === key));\n        }\n        onVariantChange(variant);\n    }\n\n    const renderingTypes = {\n        default: (\n            <div>\n                {Object.keys(attributes).map((key) => {\n                    const values = attributes[key];\n                    return (\n                        <div key={key} className=\"border-[#dfdfdf]\">\n                            <p className=\"mt-2 text-sm  font-semibold\">{key}</p>\n                            <div className=\"flex mb-5 flex-nowrap md:flex-wrap gap-2 overflow-x-scroll py-2 px-1\">\n                                {values.map((value) => {\n                                    const mostSuitableVariant = findMostSuitableVariant(variants, {\n                                        ...selectedVariant.attributes,\n                                        [key]: value,\n                                    });\n                                    return (\n                                        <button\n                                            key={value}\n                                            onClick={(e) => onAttributeSelect(key, value)}\n                                            type=\"button\"\n                                            className=\"w-2/6 md:w-1/6 md:py-2 py-4 rounded-lg text-text flex flex-col items-center text-xs font-medium overflow-hidden variant-option\"\n                                            style={{\n                                                opacity: !mostSuitableVariant ? 0.2 : 1,\n                                                border:\n                                                    value === selectedVariant.attributes[key]\n                                                        ? '1px solid #000'\n                                                        : '1px solid #efefef',\n                                            }}\n                                        >\n                                            <div className=\"img-container p-3 w-[80px] img-contain\">\n                                                {mostSuitableVariant?.images?.[0] && (\n                                                    <Image\n                                                        {...mostSuitableVariant.images[0]}\n                                                        sizes=\"100px\"\n                                                        fallbackAlt={mostSuitableVariant.name}\n                                                    />\n                                                )}\n                                            </div>\n                                            {value}\n                                        </button>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    );\n                })}\n            </div>\n        ),\n        dropdown: (\n            <>\n                {Object.keys(attributes).map((key) => {\n                    const values = attributes[key];\n                    return (\n                        <label key={key} className=\"block\">\n                            <select\n                                onChange={(e) => onAttributeSelect(key, e.target.value)}\n                                className=\"py-2 min-w-full w-full px-4 bg-[#efefef] grow-0  text-sm rounded-md min-w-[150px] \"\n                            >\n                                <optgroup label={key}>\n                                    {values.map((value: any) => {\n                                        const mostSuitableVariant = findMostSuitableVariant(variants, {\n                                            ...selectedVariant.attributes,\n                                            [key]: value,\n                                        });\n                                        return (\n                                            <option key={value} disabled={!mostSuitableVariant} value={value}>\n                                                {value}\n                                            </option>\n                                        );\n                                    })}\n                                </optgroup>\n                            </select>\n                        </label>\n                    );\n                })}\n            </>\n        ),\n    };\n\n    return renderingTypes[renderingType as keyof typeof renderingTypes] || null;\n};\n"],
  "mappings": "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",
  "names": ["import_jsx_dev_runtime", "variant"]
}
