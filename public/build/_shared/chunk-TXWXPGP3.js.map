{
  "version": 3,
  "sources": ["../../../node_modules/@crystallize/reactjs-components/src/image/component.tsx", "../../../node_modules/@crystallize/reactjs-components/dist/image/types.js", "../../../node_modules/@crystallize/reactjs-components/src/image/index.ts", "../../../src/use-cases/checkout/pricing.ts", "../../../src/ui/components/price.tsx"],
  "sourcesContent": ["import { ImageVariant } from '@crystallize/js-api-client';\nimport { FunctionComponent } from 'react';\nimport { ImageProps } from './types';\n\nfunction getVariantSrc(variant: ImageVariant): string {\n    return `${variant.url} ${variant.width}w`;\n}\n\nexport const Image: FunctionComponent<ImageProps> = ({ children, ...restOfAllProps }) => {\n    const {\n        src,\n        url,\n        sizes,\n        variants,\n        altText,\n        alt: altPassed,\n        fallbackAlt,\n        caption,\n        className,\n        media,\n        _availableSizes,\n        _availableFormats,\n        width,\n        height,\n        ...rest\n    } = restOfAllProps;\n\n    let vars = (variants || []).filter((v) => !!v);\n\n    // if the alt is passed to the component we use that: highest priority\n    // if there is nothing from the API response (altText) then we use the fallbackAlt\n    // otherwise we set empty for W3C validation\n    const alt = altPassed || altText || fallbackAlt || '';\n\n    // Naive rendering POC\n    if (url && _availableSizes && _availableFormats) {\n        vars = [];\n        const urlWithoutFileExtension = url.replace(/\\.[^/]+$/, '');\n        const match = urlWithoutFileExtension.match(/(.+)(\\/)([^/]+)$/);\n        if (match) {\n            const [, base, , filename] = match;\n\n            _availableSizes.forEach((size) => {\n                _availableFormats.forEach((format) => {\n                    vars.push({\n                        url: `${base}/@${size}/${filename}.${format}`,\n                        key: `${size}.${format}`,\n                        width: size,\n                    });\n                });\n            });\n        }\n    }\n\n    const hasVariants = vars.length > 0;\n\n    // Get the biggest image from the variants\n    let biggestImage: ImageVariant = vars[0];\n    if (hasVariants) {\n        biggestImage = vars.reduce(function (acc: ImageVariant, v: ImageVariant): ImageVariant {\n            if (!acc.width || v.width > acc.width) {\n                return v;\n            }\n            return acc;\n        }, vars[0]);\n    }\n\n    // Determine srcSet\n    const std = vars.filter((v) => v.url && !v.url.endsWith('.webp') && !v.url.endsWith('.avif'));\n    const webp = vars.filter((v) => v.url && v.url.endsWith('.webp'));\n    const avif = vars.filter((v) => v.url && v.url.endsWith('.avif'));\n    const srcSet = std.map(getVariantSrc).join(', ');\n    const srcSetWebp = webp.map(getVariantSrc).join(', ');\n    const srcSetAvif = avif.map(getVariantSrc).join(', ');\n\n    // Determine the original file extension\n    let originalFileExtension = 'jpeg';\n    if (std.length > 0) {\n        const match = std[0].url.match(/\\.(?<name>[^.]+)$/);\n        originalFileExtension = match?.groups?.name || 'jpeg';\n\n        // Provide correct mime type for jpg\n        if (originalFileExtension === 'jpg') {\n            originalFileExtension = 'jpeg';\n        }\n    }\n\n    const commonProps = {\n        // Ensure fallback src for older browsers\n        src: src || url || (hasVariants ? std[0].url : undefined),\n        alt,\n        caption,\n        width: width ?? biggestImage?.width,\n        height: height ?? biggestImage?.height,\n    };\n\n    let useWebP = srcSetWebp.length > 0;\n    let useAvif = srcSetAvif.length > 0;\n\n    /**\n     * Only output Avif format if it is smaller than\n     * webP. For the future: show only one of them when\n     * the browser support for Avif is good enough\n     */\n    if (useWebP && useAvif) {\n        const [firstWebp] = webp;\n        const [firstAvif] = avif;\n        if (firstWebp.size && firstAvif.size) {\n            useAvif = firstWebp.size > firstAvif.size;\n        }\n    }\n\n    if (children) {\n        return children({\n            srcSet,\n            srcSetWebp,\n            srcSetAvif,\n            useAvif,\n            useWebP,\n            className,\n            sizes,\n            media,\n            ...commonProps,\n            ...rest,\n            originalFileExtension,\n        });\n    }\n\n    const captionString = caption?.html?.[0] || caption?.plainText?.[0] || '';\n\n    return (\n        <figure className={className}>\n            <picture>\n                {useAvif && <source srcSet={srcSetAvif} type=\"image/avif\" sizes={sizes} media={media} />}\n                {useWebP && <source srcSet={srcSetWebp} type=\"image/webp\" sizes={sizes} media={media} />}\n                {srcSet.length > 0 && (\n                    <source srcSet={srcSet} type={`image/${originalFileExtension}`} sizes={sizes} media={media} />\n                )}\n                {/* eslint-disable-next-line jsx-a11y/alt-text */}\n                <img {...commonProps} {...rest} />\n            </picture>\n            {captionString && <figcaption dangerouslySetInnerHTML={{ __html: captionString }} />}\n        </figure>\n    );\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map", "export * from './component';\nexport * from './types';\n", "import { ProductVariant } from '../contracts/ProductVariant';\nimport { Currency, CurrencyCode, getCurrencyFromCode } from '../contracts/Currency';\n\nexport type DisplayPrice = {\n    default: number;\n    discounted?: number;\n    percent: number;\n    currency: Currency;\n};\n\n/** @todo: MUST be EXTRACTED: as it used the Local to Project Type */\nexport default function displayPriceFor(\n    variant: ProductVariant,\n    identifiers: { default: string; discounted: string } = {\n        default: 'default',\n        discounted: 'sales',\n    },\n    currencyCode: CurrencyCode,\n    discount?: {\n        amount: number;\n    },\n): DisplayPrice {\n    const priceVariants = variant?.priceVariants;\n    const currency = getCurrencyFromCode(currencyCode);\n    if (!priceVariants) {\n        return {\n            default: 0.0,\n            percent: 0.0,\n            currency,\n        };\n    }\n\n    const defaultPrice =\n        priceVariants[identifiers.default] && priceVariants[identifiers.default].currency.code === currency.code\n            ? priceVariants[identifiers.default].value\n            : 0.0;\n    const discountedPrice =\n        discount?.amount ||\n        (priceVariants[identifiers.discounted] && priceVariants[identifiers.discounted].currency.code === currency.code)\n            ? priceVariants[identifiers.discounted].value\n            : undefined;\n\n    if (!discountedPrice) {\n        return {\n            default: defaultPrice,\n            percent: 0.0,\n            currency,\n        };\n    }\n\n    return {\n        default: defaultPrice,\n        discounted: discountedPrice,\n        percent: defaultPrice > 0 ? Math.round(((defaultPrice - discountedPrice) / defaultPrice) * 100) : 0.0,\n        currency,\n    };\n}\n", "import { CartItem } from '@crystallize/node-service-api-request-handlers';\nimport displayPriceFor, { DisplayPrice } from '~/use-cases/checkout/pricing';\nimport { Price as CrystallizePrice } from '../lib/pricing/pricing-component';\nimport { DataMapper } from '~/use-cases/mapper';\nimport { useAppContext } from '../app-context/provider';\nimport { ProductVariant } from '~/use-cases/contracts/ProductVariant';\n\nexport const DiscountedPrice: React.FC<{ price: DisplayPrice; size?: string }> = ({ price, size = 'medium' }) => {\n    const priceSize = {\n        small: {\n            default: 'text-md font-semibold',\n            previous: 'line-through font-semibold pt-1 text-xs',\n            discount: 'text-md font-semibold text-green2',\n            percentage: 'text-sm py-1 px-2 h-[26px] rounded-md bg-[#efefef] font-medium',\n        },\n        medium: {\n            default: 'text-2xl font-bold',\n            previous: 'line-through font-semibold pt-1 text-sm',\n            discount: 'text-2xl font-bold text-green2',\n            percentage: 'text-sm py-1 px-2 h-[26px] rounded-md bg-[#efefef] font-bold',\n        },\n    };\n    const { default: defaultPrice, discounted: discountPrice, percent: discountPercentage, currency } = price;\n\n    return (\n        <div>\n            {discountPrice && discountPrice < defaultPrice ? (\n                <div className=\"flex flex-wrap  flex-col\">\n                    <div className={priceSize[size as keyof typeof priceSize].previous}>\n                        <CrystallizePrice currencyCode={currency.code}>{defaultPrice}</CrystallizePrice>\n                    </div>\n                    <div className=\"flex gap-2 items-center \">\n                        <div className={priceSize[size as keyof typeof priceSize].discount}>\n                            <CrystallizePrice currencyCode={currency.code}>{discountPrice}</CrystallizePrice>\n                        </div>\n                        <div className={priceSize[size as keyof typeof priceSize].percentage}>\n                            -{discountPercentage}%\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <div className={priceSize[size as keyof typeof priceSize].default}>\n                    <CrystallizePrice currencyCode={currency.code}>{defaultPrice}</CrystallizePrice>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport const Price: React.FC<{ variant: ProductVariant; size?: string }> = ({ variant, size = 'medium' }) => {\n    const { state } = useAppContext();\n    const price = displayPriceFor(\n        variant,\n        {\n            default: 'default',\n            discounted: 'sales',\n        },\n        state.currency.code,\n    );\n    return <DiscountedPrice price={price} size={size} />;\n};\n\nexport const CartItemPrice: React.FC<{ item: CartItem; saving: any; size?: string }> = ({\n    item,\n    saving,\n    size = 'small',\n}) => {\n    const mapper = DataMapper();\n    const { state, _t } = useAppContext();\n    return (\n        <>\n            <Price variant={mapper.API.Object.APIProductVariantToProductVariant(item.variant)} size={size} />\n            <div>\n                {_t('total')}:{' '}\n                <CrystallizePrice currencyCode={state.currency.code}>{item.price.gross}</CrystallizePrice>\n                {saving && (\n                    <>\n                        <del className=\"text-red mx-2\">\n                            <CrystallizePrice currencyCode={state.currency.code}>\n                                {item.price.net + saving.amount}\n                            </CrystallizePrice>\n                        </del>\n                        <small>({saving.quantity} for free!)</small>\n                    </>\n                )}\n            </div>\n        </>\n    );\n};\n"],
  "mappings": "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",
  "names": ["Price"]
}
