{
  "version": 3,
  "sources": ["../../../src/use-cases/contracts/Currency.ts"],
  "sourcesContent": ["const mapping = {\n    AED: '\u062F.\u0625',\n    AFN: '\u060B',\n    ALL: 'L',\n    AMD: '\u058F',\n    ANG: '\u0192',\n    AOA: 'Kz',\n    ARS: '$',\n    AUD: '$',\n    AWG: '\u0192',\n    AZN: '\u20BC',\n    BAM: 'KM',\n    BBD: '$',\n    BDT: '\u09F3',\n    BGN: '\u043B\u0432',\n    BHD: '.\u062F.\u0628',\n    BIF: 'FBu',\n    BMD: '$',\n    BND: '$',\n    BOB: '$b',\n    BRL: 'R$',\n    BSD: '$',\n    BTC: '\u20BF',\n    BTN: 'Nu.',\n    BWP: 'P',\n    BYR: 'Br',\n    BYN: 'Br',\n    BZD: 'BZ$',\n    CAD: '$',\n    CDF: 'FC',\n    CHF: 'CHF',\n    CLP: '$',\n    CNY: '\u00A5',\n    COP: '$',\n    CRC: '\u20A1',\n    CUC: '$',\n    CUP: '\u20B1',\n    CVE: '$',\n    CZK: 'K\u010D',\n    DJF: 'Fdj',\n    DKK: 'kr',\n    DOP: 'RD$',\n    DZD: '\u062F\u062C',\n    EEK: 'kr',\n    EGP: '\u00A3',\n    ERN: 'Nfk',\n    ETB: 'Br',\n    ETH: '\u039E',\n    EUR: '\u20AC',\n    FJD: '$',\n    FKP: '\u00A3',\n    GBP: '\u00A3',\n    GEL: '\u20BE',\n    GGP: '\u00A3',\n    GHC: '\u20B5',\n    GHS: 'GH\u20B5',\n    GIP: '\u00A3',\n    GMD: 'D',\n    GNF: 'FG',\n    GTQ: 'Q',\n    GYD: '$',\n    HKD: '$',\n    HNL: 'L',\n    HRK: 'kn',\n    HTG: 'G',\n    HUF: 'Ft',\n    IDR: 'Rp',\n    ILS: '\u20AA',\n    IMP: '\u00A3',\n    INR: '\u20B9',\n    IQD: '\u0639.\u062F',\n    IRR: '\uFDFC',\n    ISK: 'kr',\n    JEP: '\u00A3',\n    JMD: 'J$',\n    JOD: 'JD',\n    JPY: '\u00A5',\n    KES: 'KSh',\n    KGS: '\u043B\u0432',\n    KHR: '\u17DB',\n    KMF: 'CF',\n    KPW: '\u20A9',\n    KRW: '\u20A9',\n    KWD: 'KD',\n    KYD: '$',\n    KZT: '\u043B\u0432',\n    LAK: '\u20AD',\n    LBP: '\u00A3',\n    LKR: '\u20A8',\n    LRD: '$',\n    LSL: 'M',\n    LTC: '\u0141',\n    LTL: 'Lt',\n    LVL: 'Ls',\n    LYD: 'LD',\n    MAD: 'MAD',\n    MDL: 'lei',\n    MGA: 'Ar',\n    MKD: '\u0434\u0435\u043D',\n    MMK: 'K',\n    MNT: '\u20AE',\n    MOP: 'MOP$',\n    MRO: 'UM',\n    MRU: 'UM',\n    MUR: '\u20A8',\n    MVR: 'Rf',\n    MWK: 'MK',\n    MXN: '$',\n    MYR: 'RM',\n    MZN: 'MT',\n    NAD: '$',\n    NGN: '\u20A6',\n    NIO: 'C$',\n    NOK: 'kr',\n    NPR: '\u20A8',\n    NZD: '$',\n    OMR: '\uFDFC',\n    PAB: 'B/.',\n    PEN: 'S/',\n    PGK: 'K',\n    PHP: '\u20B1',\n    PKR: '\u20A8',\n    PLN: 'z\u0142',\n    PYG: 'Gs',\n    QAR: '\uFDFC',\n    RMB: '\uFFE5',\n    RON: 'lei',\n    RSD: '\u0414\u0438\u043D.',\n    RUB: '\u20BD',\n    RWF: 'R\u20A3',\n    SAR: '\uFDFC',\n    SBD: '$',\n    SCR: '\u20A8',\n    SDG: '\u062C.\u0633.',\n    SEK: 'kr',\n    SGD: 'S$',\n    SHP: '\u00A3',\n    SLL: 'Le',\n    SOS: 'S',\n    SRD: '$',\n    SSP: '\u00A3',\n    STD: 'Db',\n    STN: 'Db',\n    SVC: '$',\n    SYP: '\u00A3',\n    SZL: 'E',\n    THB: '\u0E3F',\n    TJS: 'SM',\n    TMT: 'T',\n    TND: '\u062F.\u062A',\n    TOP: 'T$',\n    TRL: '\u20A4',\n    TRY: '\u20BA',\n    TTD: 'TT$',\n    TVD: '$',\n    TWD: 'NT$',\n    TZS: 'TSh',\n    UAH: '\u20B4',\n    UGX: 'USh',\n    USD: '$',\n    UYU: '$U',\n    UZS: \"so'm\",\n    VEF: 'Bs',\n    VND: '\u20AB',\n    VUV: 'VT',\n    WST: 'WS$',\n    XAF: 'FCFA',\n    XBT: '\u0243',\n    XCD: '$',\n    XOF: 'CFA',\n    XPF: '\u20A3',\n    YER: '\uFDFC',\n    ZAR: 'R',\n    ZMK: 'ZK',\n    ZWD: 'Z$',\n} as const;\nexport type CurrencyCode = keyof typeof mapping;\nexport type CurrencySymbol = typeof mapping[CurrencyCode];\nexport type Currency = {\n    code: CurrencyCode;\n    symbol: CurrencySymbol;\n};\n\nexport const getSymbolFromCode = (code: CurrencyCode): CurrencySymbol => mapping[code];\nexport const getCodeFromSymbol = (symbol: CurrencySymbol): CurrencyCode => {\n    return (Object.keys(mapping) as (keyof typeof mapping)[]).find((key: CurrencyCode) => {\n        return mapping[key] === symbol;\n    })!;\n};\n\nexport const getCurrencyFromCode = (code: CurrencyCode | string): Currency => {\n    return {\n        code: code.toUpperCase() as CurrencyCode,\n        symbol: getSymbolFromCode(code.toUpperCase() as CurrencyCode),\n    };\n};\n"],
  "mappings": ";AAAA,IAAM,UAAU;AAAA,EACZ,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AAAA,EACL,KAAK;AACT;AAQO,IAAM,oBAAoB,CAAC,SAAuC,QAAQ;AAO1E,IAAM,sBAAsB,CAAC,SAA0C;AAC1E,SAAO;AAAA,IACH,MAAM,KAAK,YAAY;AAAA,IACvB,QAAQ,kBAAkB,KAAK,YAAY,CAAiB;AAAA,EAChE;AACJ;",
  "names": []
}
