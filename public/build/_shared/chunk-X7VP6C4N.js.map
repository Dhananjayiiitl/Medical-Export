{
  "version": 3,
  "sources": ["../../../src/use-cases/crystallize/read/fetchLandingPage.ts", "../../../src/use-cases/crystallize/read/fetchDocument.ts", "../../../src/use-cases/crystallize/read/fetchFolder.ts", "../../../src/use-cases/crystallize/read/fetchHierarchy.ts", "../../../src/use-cases/crystallize/read/fetchNavigation.ts", "../../../src/use-cases/crystallize/read/fetchPriceRangeAndAttributes.ts", "../../../src/use-cases/crystallize/read/fetchProduct.ts", "../../../src/use-cases/crystallize/read/fetchTenantConfig.ts", "../../../src/use-cases/crystallize/read/fetchTreeMap.ts", "../../../src/use-cases/crystallize/read/fetchFooter.ts", "../../../src/use-cases/crystallize/read/search.ts", "../../../src/use-cases/crystallize/read/searchByTopic.ts", "../../../src/use-cases/crystallize/read/searchFilteredByPriceRange.ts", "../../../src/use-cases/crystallize/read/searchOrderBy.ts", "../../../src/use-cases/crystallize/read/searchOrderByPriceRange.ts", "../../../src/use-cases/crystallize/read/fetchFolderWithChildren.ts", "../../../src/use-cases/crystallize/read/index.ts"],
  "sourcesContent": ["import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, path: string, version: any, language: string) => {\n    return (\n        await apiClient.catalogueApi(\n            `#graphql\nquery ($language: String!, $path: String!, $version: VersionLabel) {\n    catalogue(path: $path, language: $language, version: $version) {\n      ... on Item {\n        name\n        path\n        meta: component(id:\"meta\"){\n          content {\n            ...on ContentChunkContent {\n              chunks {\n                id\n                type\n                content {\n                  ...on SingleLineContent {\n                    text\n                  }\n                  ...on RichTextContent {\n                    plainText\n                  }\n                  ...on ImageContent {\n                    firstImage {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        grids: component(id: \"grid\") {\n          content {\n            ... on GridRelationsContent {\n              grids {\n                rows {\n                  columns {\n                    layout {\n                      rowspan\n                      colspan\n                      colIndex\n                      rowIndex\n                    }\n                    item {\n                      name\n                      path\n                      type\n                      shape {\n                        identifier\n                      }\n                      ...on Product {\n                        defaultVariant {\n                          price\n                          priceVariants {\n                            identifier\n                            name\n                            price\n                            currency\n                          }\n                          images {\n                            variants {\n                              url\n                              width\n                              height\n                            }\n                          }\n                        }\n                      }\n                      components {\n                        type\n                        id\n                        content {\n                          ...on BooleanContent{\n                            value\n                          }\n                          ... on SingleLineContent {\n                            text\n                          }\n                          ... on RichTextContent {\n                            plainText\n                            json\n                          }\n                          ... on ImageContent {\n                            images {\n                              url\n                              altText\n                              variants {\n                                url\n                                width\n                                height\n                              }\n                            }\n                          }\n                          ... on ComponentChoiceContent {\n                            selectedComponent {\n                              name\n                              content {\n                                ...on SingleLineContent {\n                                  text\n                                }\n                                    ... on VideoContent {\n                                    videos {\n                                        title\n                                        playlists\n                                        id\n                                        thumbnails {\n                                            variants {\n                                                url\n                                                width\n                                                height\n                                            }\n                                        }\n                                    }\n                                }\n                                ... on ImageContent {\n                                  images {\n                                    url\n                                    altText\n                                    variants {\n                                      url\n                                      width\n                                      height\n                                    }\n                                  }\n                                }\n                                ... on ItemRelationsContent {\n                                  items {\n                                    name\n                                    type\n                                    path\n                                    components {\n                                      id\n                                      content {\n                                        ...on SingleLineContent {\n                                          text\n                                        }\n                                        ...on RichTextContent {\n                                          plainText\n                                        }\n                                        ...on ComponentChoiceContent {\n                                          selectedComponent {\n                                            content {\n                                              ...on ImageContent {\n                                                firstImage {\n                                                  url\n                                                  altText\n                                                  variants {\n                                                    url\n                                                    width\n                                                    height\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    ...on Product {\n                                      id\n                                      defaultVariant {\n                                        price\n                                        priceVariants {\n                                          identifier\n                                          name\n                                          price\n                                          currency\n                                        }\n                                        firstImage {\n                                          url\n                                          altText\n                                          variants {\n                                            url\n                                            width\n                                            height\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                          ... on ContentChunkContent {\n                            chunks {\n                              id  \n                              content {\n                                ... on NumericContent {\n                                  number\n                                  unit\n                                }\n                                ...on SingleLineContent{\n                                    text\n                                }\n                                ...on SelectionContent {\n                                    options {\n                                        key\n                                        value\n                                    }\n                                }\n                                ...on BooleanContent {\n                                    value\n                                }\n                                ... on ItemRelationsContent {\n                                  items {\n                                    name\n                                    type\n                                    path\n                                    ...on Product {\n                                      id\n                                      defaultVariant {\n                                        price\n                                        priceVariants {\n                                          identifier\n                                          name\n                                          price\n                                          currency\n                                        }\n                                        firstImage {\n                                          url\n                                          altText\n                                          variants {\n                                            url\n                                            width\n                                            height\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                                ...on PropertiesTableContent {\n                                    sections {\n                                        title\n                                        properties {\n                                            key\n                                            value\n                                        }\n                                    }\n                                }\n                              }\n                            }\n                          }\n                          ... on SelectionContent {\n                            options {\n                              value\n                              key\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }`,\n            {\n                language,\n                path,\n                version: version === 'draft' ? 'draft' : 'published',\n            },\n        )\n    ).catalogue;\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, path: string, version: string, language: string) => {\n    return (\n        await apiClient.catalogueApi(\n            `#graphql\nquery ($language: String!, $path: String!, $version: VersionLabel) {\n    catalogue(path: $path, language: $language, version: $version) {\n      ... on Item {\n        name\n        createdAt\n        updatedAt\n        path\n        shape {\n          identifier\n        }\n        meta: component(id:\"meta\"){\n          content {\n            ...on ContentChunkContent {\n              chunks {\n                id\n                content {\n                  ...on SingleLineContent {\n                    text\n                  }\n                  ...on RichTextContent {\n                    plainText\n                  }\n                  ...on ImageContent {\n                    firstImage {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        components {\n          type\n          id\n          content {\n            ...on SingleLineContent {\n              text\n            }\n            ...on RichTextContent {\n              json\n              plainText\n            }\n            ...on ImageContent {\n              images {\n                variants {\n                  url\n                  width\n                  height\n                }\n              }\n            }\n            ...on ContentChunkContent {\n              chunks {\n                id\n                name\n                type\n                content {\n                  ... on SingleLineContent {\n                    text\n                  }\n                  ... on NumericContent {\n                    number\n                    unit\n                  }\n                  ... on ItemRelationsContent {\n                    items {\n                      name\n                      type\n                      path\n                      ...on Product {\n                        id\n                        defaultVariant {\n                            id\n                            name\n                            sku\n                          priceVariants {\n                            identifier\n                            name\n                            price\n                            currency\n                        }\n                          firstImage {\n                            url\n                            altText\n                            variants {\n                              url\n                              width\n                              height\n                            }\n                          }\n                        stockLocations {\n                            identifier\n                            name\n                            stock\n                          }\n                        }\n                        variants {\n                          id\n                          name\n                          sku\n                          price\n                          priceVariants {\n                            identifier\n                            name\n                            price\n                            currency\n                          }\n                          attributes {\n                            value\n                            attribute\n                          }\n                          stockLocations {\n                            identifier\n                            name\n                            stock\n                          }\n                          isDefault\n                          images {\n                            url\n                            altText\n                            key\n                      \n                            variants {\n                              key\n                              height\n                              width\n                              url\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            ...on PropertiesTableContent {\n              sections {\n                properties {\n                  key\n                  value\n                }\n              }\n            }\n            ...on ComponentChoiceContent {\n              selectedComponent {\n                id\n                content {\n                  ...on ImageContent {\n                    images {\n                      variants {\n                        url\n                        width\n                        height\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            ... on ItemRelationsContent {\n              items {\n                name\n                type\n                path\n                ...on Product {\n                  defaultVariant {\n                    priceVariants {\n                        identifier\n                        name\n                        price\n                        currency\n                    }\n                    images {\n                      variants {\n                        url\n                        width\n                      }\n                    }\n                    price\n                  }\n                }\n                components {\n                  name\n                  content {\n                    ... on SingleLineContent {\n                      text\n                    }\n                     ...on ComponentChoiceContent {\n                      selectedComponent {\n                        content {\n                          ...on ImageContent {\n                            images {\n                              variants {\n                                url\n                                width\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n            ...on ParagraphCollectionContent {\n              paragraphs {\n                title {\n                  text\n                }\n                body {\n                  json\n                }\n                images {\n                  url\n                  variants {\n                    url\n                    width\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }`,\n            {\n                language,\n                path,\n                version: version === 'draft' ? 'draft' : 'published',\n            },\n        )\n    ).catalogue;\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, path: string, version: string, language: string) => {\n    return (\n        await apiClient.catalogueApi(\n            `#graphql\nquery ($language: String!, $path: String!, $version: VersionLabel) {\n    catalogue(language: $language, path: $path, version: $version) {\n        id\n        name\n        path\n        meta: component(id:\"meta\"){\n          content {\n            ...on ContentChunkContent {\n              chunks {\n                id\n                type\n                content {\n                  ...on SingleLineContent {\n                    text\n                  }\n                  ...on RichTextContent {\n                    plainText\n                  }\n                  ...on ImageContent {\n                    firstImage {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        components {\n          type\n          id\n          content {\n            ...on SingleLineContent {\n              text\n            }\n            ...on RichTextContent {\n              plainText\n            }\n            ... on ComponentChoiceContent {\n              selectedComponent {\n                name\n                content {\n                    ... on GridRelationsContent {\n                        grids {\n                          rows {\n                            columns {\n                              layout {\n                                rowspan\n                                colspan\n                                colIndex\n                                rowIndex\n                              }\n                              item {\n                                name\n                                path\n                                type\n                                shape {\n                                  identifier\n                                }\n                                ...on Product {\n                                  defaultVariant {\n                                    price\n                                    attributes {\n                                        value\n                                        attribute\n                                    }\n                                    priceVariants {\n                                      identifier\n                                      name\n                                      price\n                                      currency\n                                    }\n                                    images {\n                                      variants {\n                                        url\n                                        height\n                                        width\n                                      }\n                                    }\n                                  }\n                                }\n                                components {\n                                  type\n                                  id\n                                  content {\n                                    ...on BooleanContent{\n                                      value\n                                    }\n                                    ... on SingleLineContent {\n                                      text\n                                    }\n                                    ... on RichTextContent {\n                                      plainText\n                                    }\n                                    ... on ImageContent {\n                                      images {\n                                        url\n                                        altText\n                                        variants {\n                                          url\n                                          width\n                                          height\n                                        }\n                                      }\n                                    }\n                                    ... on ComponentChoiceContent {\n                                      selectedComponent {\n                                        name\n                                        content {\n                                          ...on SingleLineContent {\n                                            text\n                                          }\n                                          ... on VideoContent {\n                                            videos {\n                                                title\n                                                playlists\n                                                id\n                                                thumbnails {\n                                                    variants {\n                                                        url\n                                                        width\n                                                        height\n                                                    }\n                                                }\n                                            }\n                                        }\n                                          ... on ImageContent {\n                                            images {\n                                              url\n                                              altText\n                                              variants {\n                                                url\n                                                width\n                                                height\n                                              }\n                                            }\n                                          }\n                                          ... on ItemRelationsContent {\n                                            items {\n                                              name\n                                              type\n                                              path\n                                              components {\n                                                id\n                                                content {\n                                                  ...on SingleLineContent {\n                                                    text\n                                                  }\n                                                  ...on RichTextContent {\n                                                    plainText\n                                                  }\n                                                  ...on ComponentChoiceContent {\n                                                    selectedComponent {\n                                                      content {\n                                                        ...on ImageContent {\n                                                          firstImage {\n                                                            url\n                                                            altText\n                                                            variants {\n                                                              url\n                                                              width\n                                                              height\n                                                            }\n                                                          }\n                                                        }\n                                                      }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                              ...on Product {\n                                                defaultVariant {\n                                                  price\n                                                  firstImage {\n                                                    url\n                                                    altText\n                                                    variants {\n                                                      url\n                                                      width\n                                                      height\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    ... on ContentChunkContent {\n                                      chunks {\n                                        id  \n                                        content {\n                                          ... on NumericContent {\n                                            number\n                                            unit\n                                          }\n                                          ...on SingleLineContent{\n                                              text\n                                          }\n                                          ...on SelectionContent {\n                                              options {\n                                                  value\n                                                  key \n                                              }\n                                          }\n                                          ...on BooleanContent {\n                                              value\n                                          }\n                                          ... on ItemRelationsContent {\n                                            items {\n                                              name\n                                              type\n                                              path\n                                              ...on Product {\n                                                id\n                                                defaultVariant {\n                                                  price\n                                                  priceVariants {\n                                                    identifier\n                                                    name\n                                                    price\n                                                    currency\n                                                  }\n                                                  firstImage {\n                                                    url\n                                                    altText\n                                                    variants {\n                                                      url\n                                                      width\n                                                      height\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                          ...on PropertiesTableContent {\n                                              sections {\n                                                  title\n                                                  properties {\n                                                      key\n                                                      value\n                                                  }\n                                              }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    ... on SelectionContent {\n                                      options {\n                                        value\n                                        key\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                  \n                  ... on ItemRelationsContent {\n                    items {\n                      name\n                      path\n                      type\n                      shape {\n                        identifier\n                      }\n                      components {\n                        type\n                        id\n                        content {\n                            ...on BooleanContent{\n                                value\n                            }\n                            ... on SingleLineContent {\n                                text\n                            }\n                            ... on RichTextContent {\n                                plainText\n                            }\n                            ... on ImageContent {\n                                images {\n                                    url\n                                    altText\n                                    variants {\n                                      url\n                                      width\n                                      height\n                                    }\n                                }\n                            }\n                            ... on ComponentChoiceContent {\n                                selectedComponent {\n                                    name\n                                    content {\n                                        ...on SingleLineContent {\n                                            text\n                                        }\n                                        ... on VideoContent {\n                                            videos {\n                                                title\n                                                playlists\n                                                id\n                                                thumbnails {\n                                                    variants {\n                                                        url\n                                                        width\n                                                        height\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        ... on ImageContent {\n                                            images {\n                                              url\n                                              altText\n                                              variants {\n                                                url\n                                                width\n                                                height\n                                              }\n                                            } \n                                        }\n                                        ... on ItemRelationsContent {\n                                            items {\n                                              name\n                                              type\n                                              path\n                                              components {\n                                                id\n                                                content {\n                                                  ...on SingleLineContent {\n                                                    text\n                                                  }\n                                                  ...on RichTextContent {\n                                                    plainText\n                                                  }\n                                                  ...on ComponentChoiceContent {\n                                                    selectedComponent {\n                                                      content {\n                                                        ...on ImageContent {\n                                                          firstImage {\n                                                            url\n                                                            altText\n                                                            variants {\n                                                              url\n                                                              width\n                                                              height\n                                                            }\n                                                          }\n                                                        }\n                                                      }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                              ...on Product {\n                                                defaultVariant {\n                                                  price\n                                                  firstImage {\n                                                    url\n                                                    altText\n                                                    variants {\n                                                      url\n                                                      width\n                                                      height\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    ... on ContentChunkContent {\n                                      chunks {\n                                        id  \n                                        content {\n                                          ... on NumericContent {\n                                            number\n                                            unit\n                                          }\n                                          ...on SingleLineContent{\n                                              text\n                                          }\n                                          ...on SelectionContent {\n                                              options {\n                                                  value\n                                                  key\n                                              }\n                                          }\n                                          ...on BooleanContent {\n                                              value\n                                          }\n                                          ... on ItemRelationsContent {\n                                            items {\n                                              name\n                                              type\n                                              path\n                                              ...on Product {\n                                                id\n                                                defaultVariant {\n                                                  price\n                                                  priceVariants {\n                                                    identifier\n                                                    name\n                                                    price\n                                                    currency\n                                                  }\n                                                  firstImage {\n                                                    url\n                                                    altText\n                                                    variants {\n                                                      url\n                                                      width\n                                                      height\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                          ...on PropertiesTableContent {\n                                              sections {\n                                                  title\n                                                  properties {\n                                                      key\n                                                      value\n                                                  }\n                                              }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    ... on SelectionContent {\n                                      options {\n                                        value\n                                        key\n                                }\n                             }\n                          }\n                       }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  `,\n            {\n                language: 'en',\n                path,\n                version: version === 'draft' ? 'draft' : 'published',\n            },\n        )\n    ).catalogue;\n};\n", "import { catalogueFetcherGraphqlBuilder, ClientInterface, createNavigationFetcher } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, path: string, language: string) => {\n    const fetch = createNavigationFetcher(apiClient).byFolders;\n    const builder = catalogueFetcherGraphqlBuilder;\n    const response = await fetch(path, language, 3, {}, (level) => {\n        switch (level) {\n            case 0:\n                return {\n                    __on: [\n                        builder.onItem({\n                            ...builder.onComponent('description', 'RichText', {\n                                json: true,\n                            }),\n                        }),\n                    ],\n                };\n            case 1:\n                return {\n                    __on: [\n                        builder.onItem({\n                            ...builder.onComponent('description', 'RichText', {\n                                json: true,\n                            }),\n                        }),\n                        builder.onFolder(),\n                    ],\n                };\n            case 2:\n                return {\n                    __on: [\n                        builder.onItem({\n                            ...builder.onComponent('description', 'RichText', {\n                                json: true,\n                            }),\n                        }),\n                        builder.onProduct({\n                            defaultVariant: {\n                                price: true,\n                                priceVariants: {\n                                    price: true,\n                                    currency: true,\n                                    identifier: true,\n                                    name: true,\n                                },\n                                attributes: {\n                                    attribute: true,\n                                    value: true,\n                                },\n                                firstImage: {\n                                    altText: true,\n                                    variants: {\n                                        width: true,\n                                        url: true,\n                                    },\n                                },\n                            },\n                        }),\n                    ],\n                };\n            default:\n                return {};\n        }\n    });\n    return response;\n};\n", "import { ClientInterface, createNavigationFetcher } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, path: string, language: string) => {\n    const [folders, topics] = await Promise.all([\n        createNavigationFetcher(apiClient).byFolders(path, language, 3),\n        createNavigationFetcher(apiClient).byTopics(path, language, 2),\n    ]);\n\n    return {\n        folders,\n        topics,\n    };\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, path: string) => {\n    return await apiClient.searchApi(\n        `#graphql\n        query GET_PRICE_RANGE($path: [String!]) {\n        search(\n          filter: {\n            type: PRODUCT\n            include: { paths: $path }\n          }\n        ) {\n          aggregations {\n            price: price {\n              min\n              max\n            }\n            attributes: variantAttributes {\n              attribute\n              value\n            }\n          }\n        }\n      }\n      `,\n        {\n            path,\n        },\n    );\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, path: string, version: string, language: string): Promise<any> => {\n    const data: { catalogue: any } = await apiClient.catalogueApi(\n        `#graphql\n    query ($language: String!, $path: String!, $version: VersionLabel!) {\n      catalogue(language: $language, path: $path, version: $version) {\n        meta: component(id:\"meta\"){\n          content {\n            ...on ContentChunkContent {\n              chunks {\n                id\n                content {\n                  ...on SingleLineContent {\n                    text\n                  }\n                  ...on RichTextContent {\n                    plainText\n                  }\n                  ...on ImageContent {\n                    firstImage {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      ...on Product {\n        ...product\n        topics {\n          path\n          name\n        }\n      }\n    }\n  }\n  \n  fragment content on ComponentContent {\n    ...boolean\n    ...singleLine\n    ...richText\n    ...imageContent\n    ...paragraphCollection\n    ...itemRelations\n    ...gridRelations\n    ...location\n    ...propertiesTable\n    ...dateTime\n    ...videoContent\n    ...numeric\n    ...selection\n    ...file\n  }\n  \n  fragment component on Component {\n    id\n    name\n    type\n    content {\n      ...content\n      ...componentChoice\n      ...contentChunk\n    }\n  }\n  \n  fragment dateTime on DatetimeContent {\n    datetime\n  }\n    \n  \n  fragment gridRelations on GridRelationsContent {\n    grids {\n      id\n      name\n    }\n  }\n  \n  fragment imageContent on ImageContent {\n    images {\n      ...image\n    }\n  }\n  \n  fragment image on Image {\n    url\n    altText\n    key\n    variants {\n      url\n      width\n      height\n      key\n    }\n  }\n  \n  fragment itemRelations on ItemRelationsContent {\n    items {\n      id\n      name\n      path\n      ...on Product {\n        defaultVariant {\n          priceVariants {\n            identifier\n            name\n            price\n            currency\n          }\n          images {\n            variants {\n              url\n              height\n              width\n            }\n          }\n        }\n      }\n    }\n  }\n  \n  fragment location on LocationContent {\n    lat\n    long\n  }\n  \n  fragment paragraphCollection on ParagraphCollectionContent {\n    paragraphs {\n      title {\n        ...singleLine\n      }\n      body {\n        ...richText\n      }\n      images {\n        ...image\n      }\n    }\n  }\n  \n  fragment product on Product {\n    id\n    name\n    type\n    language\n    path\n  \n    components {\n      ...component\n    }\n  \n    variants {\n      id\n      name\n      sku\n      price\n      priceVariants {\n        identifier\n        name\n        price\n        currency\n      }\n      description: component(id:\"description\") {\n        content {\n            ...on ComponentChoiceContent {\n                selectedComponent {\n                    id\n                    content {\n                        ...richText\n                    }\n                }\n            }\n        }\n      }\n      attributes {\n        value\n        attribute\n      }\n      stockLocations {\n        identifier\n        name\n        stock\n      }\n      isDefault\n      images {\n        url\n        altText\n        key\n  \n        variants {\n          key\n          height\n          width\n          url\n        }\n      }\n  \n      subscriptionPlans {\n        identifier\n        name\n        periods {\n          id\n          name\n          initial {\n            priceVariants {\n              identifier\n              name\n              price\n              currency\n            }\n          }\n          recurring {\n            priceVariants {\n              identifier\n              name\n              price\n              currency\n            }\n          }\n        }\n      }\n    }\n  \n    vatType {\n      name\n      percent\n    }\n  }\n  \n  fragment propertiesTable on PropertiesTableContent {\n    sections {\n      ... on PropertiesTableSection {\n        title\n        properties {\n          key\n          value\n        }\n      }\n    }\n  }\n  \n  fragment richText on RichTextContent {\n    json\n    html\n    plainText\n  }\n  \n  fragment boolean on BooleanContent {\n    value\n  }\n  \n  fragment singleLine on SingleLineContent {\n    text\n  }\n  \n  fragment videoContent on VideoContent {\n    videos {\n      ...video\n    }\n  }\n  \n  fragment video on Video {\n    id\n    playlists\n    title\n    thumbnails {\n      ...image\n    }\n  }\n  \n  fragment numeric on NumericContent {\n    number\n    unit\n  }\n  \n  fragment componentChoice on ComponentChoiceContent {\n    selectedComponent {\n      id\n      name\n      type\n      content {\n        ...content\n      }\n    }\n  }\n  \n  fragment contentChunk on ContentChunkContent {\n    chunks {\n      id\n      name\n      type\n      content {\n        ...content\n      }\n    }\n  }\n  \n  fragment selection on SelectionContent {\n    options {\n      key\n      value\n    }\n  }\n  \n  \n  fragment file on FileContent {\n    files {\n      url\n      key\n      title\n      size\n    }\n  }  \n\n`,\n        {\n            language,\n            path,\n            version: version === 'draft' ? 'draft' : 'published',\n        },\n    );\n\n    return data.catalogue;\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\nimport { TenantConfiguration } from '../../contracts/TenantConfiguration';\n\nconst QUERY_FETCH_TENANT_CONFIG = `#graphql\nquery FETCH_TENANT_CONFIG ($identifier: String!) {\n    tenant {\n        get(identifier: $identifier) {\n            id\n            logo {\n                key\n                url\n                variants {\n                    ... on ImageVariant {\n                        key\n                        url\n                        width\n                        height\n                    }\n                }\n            }\n        }\n    }\n}`;\n\nexport default async (apiClient: ClientInterface, tenantIdentifier: string): Promise<TenantConfiguration> => {\n    try {\n        const { tenant } = await apiClient.pimApi(QUERY_FETCH_TENANT_CONFIG, {\n            identifier: tenantIdentifier,\n        });\n        const tenantId = tenant?.get?.id;\n\n        const currency = (\n            await apiClient.pimApi(\n                `query { priceVariant{ get(identifier:\"default\", tenantId:\"${tenantId}\") { currency } } }`,\n            )\n        )?.priceVariant?.get?.currency;\n        return {\n            currency,\n            crystalPayments: ['card', 'coin'],\n            paymentImplementations: ['crystal'],\n            logo: tenant?.get?.logo,\n        };\n    } catch (error) {\n        // we don't to break here, therefore we are returning a default config if the credentials are not working\n        return {\n            currency: 'USD',\n            crystalPayments: ['card', 'coin'],\n            paymentImplementations: ['crystal'],\n        };\n    }\n};\n", "import { ClientInterface, createNavigationFetcher } from '@crystallize/js-api-client';\n\n//@todo: this should be cached somehow\nexport default async (apiClient: ClientInterface, language: string) => {\n    const fetchByFolders = createNavigationFetcher(apiClient).byFolders;\n    const fetchByTopics = createNavigationFetcher(apiClient).byTopics;\n\n    const [folders, topics] = await Promise.all([\n        fetchByFolders('/', language, 10, {}, () => {\n            return {\n                shape: {\n                    identifier: true,\n                },\n            };\n        }),\n        fetchByTopics('/', language, 10),\n    ]);\n\n    const map: Record<string, any> = {};\n    const browse = (node: any) => {\n        map[node.path] = node;\n        if (node.children) {\n            node.children.forEach(browse);\n        }\n    };\n    browse(folders.tree);\n    topics.tree.forEach(browse);\n    return map;\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, path: string, version: string, language: string) => {\n    return (\n        await apiClient.catalogueApi(\n            `#graphql\n            query ($language: String!, $path: String!, $version: VersionLabel) {\n                catalogue(path: $path, language: $language, version: $version) {\n                    name\n                    components {\n                        id\n                        content {\n                            ...on SingleLineContent {\n                                text\n                            }\n                            ...on RichTextContent {\n                                plainText\n                                json\n                                html\n                            }\n                            ...on ContentChunkContent {\n                                chunks {\n                                    id\n                                    name\n                                    type\n                                    content {\n                                    ...on ImageContent {\n                                        images {\n                                            altText\n                                            url\n                                            variants {\n                                                url\n                                                width\n                                                height\n                                            }\n                                        }\n                                    }\n                                    ...on SingleLineContent {\n                                        text\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }`,\n            {\n                language,\n                path,\n                version: version === 'draft' ? 'draft' : 'published',\n            },\n        )\n    ).catalogue;\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, value: string, language: string): Promise<any[]> => {\n    const data = await apiClient.searchApi(\n        `#graphql\n        query Search ($searchTerm: String!){\n                        search(language:\"${language}\", first: 100, filter: { \n                            searchTerm: $searchTerm, \n                            type: PRODUCT, \n                            }){\n                          edges {\n                            node {\n                              name\n                              type\n                              path\n                              ... on Product {\n                                matchingVariant {\n                                  name\n                                  price\n                                  isDefault\n                                  priceVariants {\n                                    identifier\n                                    name\n                                    price\n                                    currency\n                                  }\n                                  images {\n                                    url\n                                    variants {\n                                      url\n                                      width\n                                      key\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n            `,\n        {\n            searchTerm: value,\n        },\n    );\n    return data.search.edges;\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, value: string, language: string) => {\n    return await apiClient.searchApi(\n        `#graphql\n        query SEARCH_BY_TOPIC($value: String!) {\n      topics: search(language: \"${language}\"){\n        aggregations {\n          topics {\n            path\n            name\n          }\n        }\n      }\n          search(\n            language: \"${language}\"\n            first: 100,\n            filter: {\n              type: PRODUCT\n              include: {\n                topicPaths: {\n                  sections: [\n                    { fields: { value: $value } }\n                  ]\n                }\n              }\n            }\n          ) {\n            edges {\n              node {\n                id\n                name\n                path\n                topics {\n                  name\n                  path\n                }\n                ... on Product {\n                  matchingVariant {\n                    name\n                    isDefault\n                    price\n                    priceVariants {\n                      identifier\n                      name\n                      currency\n                      price\n                    }\n                    attributes {\n                        attribute\n                        value\n                    }\n                    images {\n                      variants {\n                        url\n                        width\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      `,\n        {\n            value,\n        },\n    );\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, path: string, language: string, min: string, max: string) => {\n    return await apiClient.searchApi(\n        `#graphql\n        query SEARCH_ORDER_BY_PRICE_RANGE($path: [String!], $min: Float, $max: Float) {\n        search(\n          language: \"${language}\"  \n          first: 100,\n          filter: {\n            type: PRODUCT\n            include: { paths: $path }\n            productVariants: { priceRange: { min: $min, max: $max } }\n          }\n        ) {\n          edges {\n            node {\n              name\n              path\n              ... on Product {\n                matchingVariant {\n                  isDefault\n                  price\n                  priceVariants {\n                    identifier\n                    name\n                    price\n                    currency\n                  }\n                  images {\n                    variants {\n                      url\n                      width\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      `,\n        {\n            path,\n            min,\n            max,\n        },\n    );\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (\n    apiClient: ClientInterface,\n    path: string,\n    language: string,\n    orderBy?: any,\n    fitlers?: any,\n    attributes?: any,\n) => {\n    const field = orderBy?.split('_')[0] || 'NAME';\n    const direction = orderBy?.split('_')[1] || 'ASC';\n    const priceRangeParams = fitlers.price;\n\n    attributes = attributes.map((attribute: string) => {\n        return {\n            attribute: attribute.split('_')[0],\n            value: attribute.split('_')[1],\n        };\n    });\n\n    const attributeFilters = attributes.reduce(\n        (\n            acc: { [x: string]: { attribute: string; values: string[] } },\n            { attribute, value }: { attribute: string; value: string },\n        ) => {\n            acc[attribute] ??= { attribute, values: [] };\n            acc[attribute].values.push(value);\n            return acc;\n        },\n        [],\n    );\n\n    const results = await apiClient.searchApi(\n        `#graphql\n        query SEARCH_ORDERBY(\n        $path: [String!]\n        $field: OrderField!\n        $direction: OrderDirection!\n        $min: Float\n        $max: Float\n        $attributes: [VariantAttributeFilter!]\n      ) {\n        search(\n          language: \"${language}\"\n          first: 100,\n          orderBy: { field: $field, direction: $direction }\n          filter: {\n            type: PRODUCT\n            productVariants: { priceRange: { min: $min, max: $max }, attributes: $attributes }\n            include: { paths: $path }\n          }\n        ) {\n          edges {\n            node {\n              name\n              path\n              ... on Product {\n                  matchingVariant {\n                  name\n                  price\n                  isDefault\n                  sku\n                  attributes {\n                    attribute\n                    value\n                  }\n                  priceVariants {\n                    identifier\n                    name\n                    price\n                    currency\n                  }\n                  images {\n                    url\n                    variants {\n                      url\n                      width\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n      `,\n        {\n            path,\n            field: field === 'NAME' ? 'ITEM_NAME' : field,\n            direction,\n            min: priceRangeParams.min ? parseFloat(priceRangeParams.min) : 0.0,\n            max: priceRangeParams.max ? parseFloat(priceRangeParams.max) : 0.0,\n            attributes: Object.values(attributeFilters) as [],\n        },\n    );\n\n    return results?.search?.edges || [];\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, path: string, language: string) => {\n    return await apiClient.searchApi(\n        `#graphql\n        query SEARCH_ORDER_BY_PRICE_RANGE($path: [String!]) {\n        search(\n          language: \"${language}\"\n          first: 100,  \n          filter: {\n            type: PRODUCT\n            include: { paths: $path }\n          }\n        ) {\n          edges {\n            node {\n              name\n              path\n              ... on Product {\n                matchingVariant {\n                  isDefault\n                  price\n                  priceVariants {\n                    identifier\n                    name\n                    price\n                    currency\n                  }\n                  images {\n                    variants {\n                      url\n                      width\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }`,\n        {\n            path,\n        },\n    );\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\n\nexport default async (apiClient: ClientInterface, path: string, version: string, language: string) => {\n    return (\n        await apiClient.catalogueApi(\n            `#graphql\nquery ($language: String!, $path: String!, $version: VersionLabel) {\n    catalogue(language: $language, path: $path, version: $version) {\n        id\n        name\n        path\n        meta: component(id:\"meta\"){\n          content {\n            ...on ContentChunkContent {\n              chunks {\n                id\n                type\n                content {\n                  ...on SingleLineContent {\n                    text\n                  }\n                  ...on RichTextContent {\n                    plainText\n                  }\n                  ...on ImageContent {\n                    firstImage {\n                      url\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        components {\n          type\n          id\n          content {\n            ...on SingleLineContent {\n              text\n            }\n            ...on RichTextContent {\n              plainText\n            }\n            ... on ComponentChoiceContent {\n              selectedComponent {\n                name\n                content {\n                    ... on GridRelationsContent {\n                        grids {\n                          rows {\n                            columns {\n                              layout {\n                                rowspan\n                                colspan\n                                colIndex\n                                rowIndex\n                              }\n                              item {\n                                name\n                                path\n                                type\n                                shape {\n                                  identifier\n                                }\n                                ...on Product {\n                                  defaultVariant {\n                                    price\n                                    attributes {\n                                        value\n                                        attribute\n                                    }\n                                    priceVariants {\n                                      identifier\n                                      name\n                                      price\n                                      currency\n                                    }\n                                    images {\n                                      variants {\n                                        url\n                                        height\n                                        width\n                                      }\n                                    }\n                                  }\n                                }\n                                components {\n                                  type\n                                  id\n                                  content {\n                                    ...on BooleanContent{\n                                      value\n                                    }\n                                    ... on SingleLineContent {\n                                      text\n                                    }\n                                    ... on RichTextContent {\n                                      plainText\n                                    }\n                                    ... on ImageContent {\n                                      images {\n                                        url\n                                        altText\n                                        variants {\n                                          url\n                                          width\n                                          height\n                                        }\n                                      }\n                                    }\n                                    ... on ComponentChoiceContent {\n                                      selectedComponent {\n                                        name\n                                        content {\n                                          ...on SingleLineContent {\n                                            text\n                                          }\n                                          ... on VideoContent {\n                                            videos {\n                                                title\n                                                playlists\n                                                id\n                                                thumbnails {\n                                                    variants {\n                                                        url\n                                                        width\n                                                        height\n                                                    }\n                                                }\n                                            }\n                                        }\n                                          ... on ImageContent {\n                                            images {\n                                              url\n                                              altText\n                                              variants {\n                                                url\n                                                width\n                                                height\n                                              }\n                                            }\n                                          }\n                                          ... on ItemRelationsContent {\n                                            items {\n                                              name\n                                              type\n                                              path\n                                              components {\n                                                id\n                                                content {\n                                                  ...on SingleLineContent {\n                                                    text\n                                                  }\n                                                  ...on RichTextContent {\n                                                    plainText\n                                                  }\n                                                  ...on ComponentChoiceContent {\n                                                    selectedComponent {\n                                                      content {\n                                                        ...on ImageContent {\n                                                          firstImage {\n                                                            url\n                                                            altText\n                                                            variants {\n                                                              url\n                                                              width\n                                                              height\n                                                            }\n                                                          }\n                                                        }\n                                                      }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                              ...on Product {\n                                                defaultVariant {\n                                                  price\n                                                  firstImage {\n                                                    url\n                                                    altText\n                                                    variants {\n                                                      url\n                                                      width\n                                                      height\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    ... on ContentChunkContent {\n                                      chunks {\n                                        id  \n                                        content {\n                                          ... on NumericContent {\n                                            number\n                                            unit\n                                          }\n                                          ...on SingleLineContent{\n                                              text\n                                          }\n                                          ...on SelectionContent {\n                                              options {\n                                                  value\n                                                  key \n                                              }\n                                          }\n                                          ...on BooleanContent {\n                                              value\n                                          }\n                                          ... on ItemRelationsContent {\n                                            items {\n                                              name\n                                              type\n                                              path\n                                              ...on Product {\n                                                id\n                                                defaultVariant {\n                                                  price\n                                                  priceVariants {\n                                                    identifier\n                                                    name\n                                                    price\n                                                    currency\n                                                  }\n                                                  firstImage {\n                                                    url\n                                                    altText\n                                                    variants {\n                                                      url\n                                                      width\n                                                      height\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                          ...on PropertiesTableContent {\n                                              sections {\n                                                  title\n                                                  properties {\n                                                      key\n                                                      value\n                                                  }\n                                              }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    ... on SelectionContent {\n                                      options {\n                                        value\n                                        key\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                  \n                  ... on ItemRelationsContent {\n                    items {\n                      name\n                      path\n                      type\n                      shape {\n                        identifier\n                      }\n                      components {\n                        type\n                        id\n                        content {\n                            ...on BooleanContent{\n                                value\n                            }\n                            ... on SingleLineContent {\n                                text\n                            }\n                            ... on RichTextContent {\n                                plainText\n                            }\n                            ... on ImageContent {\n                                images {\n                                    url\n                                    altText\n                                    variants {\n                                      url\n                                      width\n                                      height\n                                    }\n                                }\n                            }\n                            ... on ComponentChoiceContent {\n                                selectedComponent {\n                                    name\n                                    content {\n                                        ...on SingleLineContent {\n                                            text\n                                        }\n                                        ... on VideoContent {\n                                            videos {\n                                                title\n                                                playlists\n                                                id\n                                                thumbnails {\n                                                    variants {\n                                                        url\n                                                        width\n                                                        height\n                                                    }\n                                                }\n                                            }\n                                        }\n                                        ... on ImageContent {\n                                            images {\n                                              url\n                                              altText\n                                              variants {\n                                                url\n                                                width\n                                                height\n                                              }\n                                            } \n                                        }\n                                        ... on ItemRelationsContent {\n                                            items {\n                                              name\n                                              type\n                                              path\n                                              components {\n                                                id\n                                                content {\n                                                  ...on SingleLineContent {\n                                                    text\n                                                  }\n                                                  ...on RichTextContent {\n                                                    plainText\n                                                  }\n                                                  ...on ComponentChoiceContent {\n                                                    selectedComponent {\n                                                      content {\n                                                        ...on ImageContent {\n                                                          firstImage {\n                                                            url\n                                                            altText\n                                                            variants {\n                                                              url\n                                                              width\n                                                              height\n                                                            }\n                                                          }\n                                                        }\n                                                      }\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                              ...on Product {\n                                                defaultVariant {\n                                                  price\n                                                  firstImage {\n                                                    url\n                                                    altText\n                                                    variants {\n                                                      url\n                                                      width\n                                                      height\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    ... on ContentChunkContent {\n                                      chunks {\n                                        id  \n                                        content {\n                                          ... on NumericContent {\n                                            number\n                                            unit\n                                          }\n                                          ...on SingleLineContent{\n                                              text\n                                          }\n                                          ...on SelectionContent {\n                                              options {\n                                                  value\n                                                  key\n                                              }\n                                          }\n                                          ...on BooleanContent {\n                                              value\n                                          }\n                                          ... on ItemRelationsContent {\n                                            items {\n                                              name\n                                              type\n                                              path\n                                              ...on Product {\n                                                id\n                                                defaultVariant {\n                                                  price\n                                                  priceVariants {\n                                                    identifier\n                                                    name\n                                                    price\n                                                    currency\n                                                  }\n                                                  firstImage {\n                                                    url\n                                                    altText\n                                                    variants {\n                                                      url\n                                                      width\n                                                      height\n                                                    }\n                                                  }\n                                                }\n                                              }\n                                            }\n                                          }\n                                          ...on PropertiesTableContent {\n                                              sections {\n                                                  title\n                                                  properties {\n                                                      key\n                                                      value\n                                                  }\n                                              }\n                                          }\n                                        }\n                                      }\n                                    }\n                                    ... on SelectionContent {\n                                      options {\n                                        value\n                                        key\n                                }\n                             }\n                          }\n                       }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n        children {\n          name\n          path\n          type\n          shape {\n            identifier\n          }\n          ...on Document {\n            name\n            path\n            components {\n              id\n              type\n              content {\n                ...on ContentChunkContent {\n                  chunks {\n                    id\n                    content {\n                      ... on SingleLineContent {\n                        text\n                      }\n                      ... on NumericContent {\n                        number\n                        unit\n                      }\n\n                      \n                      ... on ItemRelationsContent {\n                        items {\n                          name\n                          type\n                          path\n                          ...on Product {\n                            id\n                            defaultVariant {\n                              price\n                              priceVariants {\n                                identifier\n                                name\n                                price\n                                currency\n                              }\n                              firstImage {\n                                url\n                                altText\n                                variants {\n                                  url\n                                  width\n                                  height\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n                ...on SingleLineContent {\n                  text\n                }\n                ...on ImageContent {\n                  images {\n                    variants {\n                      url\n                      width\n                      height\n                    }\n                  }\n                }\n                ...on RichTextContent {\n                  plainText\n                }\n                ...on ComponentChoiceContent {\n                  selectedComponent {\n                    id\n                    content {\n                      ...on ImageContent {\n                        images {\n                          variants {\n                            url\n                            width\n                            height\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n          ...on Product {\n            defaultVariant {\n              price\n              priceVariants {\n                identifier\n                name\n                price\n                currency\n              }\n              firstImage {\n                url\n                altText\n              }\n            }\n          }\n        }\n      }\n    }\n  `,\n            {\n                language: 'en',\n                path,\n                version: version === 'draft' ? 'draft' : 'published',\n            },\n        )\n    ).catalogue;\n};\n", "import { ClientInterface } from '@crystallize/js-api-client';\nimport { Product } from '../../contracts/Product';\nimport fetchLandingPage from './fetchLandingPage';\nimport fetchDocument from './fetchDocument';\nimport fetchFolder from './fetchFolder';\nimport fetchHierarchy from './fetchHierarchy';\nimport fetchNavigation from './fetchNavigation';\nimport fetchPriceRangeAndAttributes from './fetchPriceRangeAndAttributes';\nimport fetchProduct from './fetchProduct';\nimport fetchTenantConfig from './fetchTenantConfig';\nimport fetchTreeMap from './fetchTreeMap';\nimport fetchFooter from './fetchFooter';\nimport search from './search';\nimport searchByTopic from './searchByTopic';\nimport searchFilteredByPriceRange from './searchFilteredByPriceRange';\nimport searchOrderBy from './searchOrderBy';\nimport searchOrderByPriceRange from './searchOrderByPriceRange';\nimport { DataMapper } from '../../mapper';\nimport fetchFolderWithChildren from './fetchFolderWithChildren';\n\nexport type CrystallizeAPIContext = {\n    apiClient: ClientInterface;\n    locale?: string;\n    isPreview?: boolean;\n    language: string;\n};\n\nexport const CrystallizeAPI = ({\n    apiClient,\n    language,\n    locale = language,\n    isPreview = false,\n}: CrystallizeAPIContext) => {\n    const version = isPreview ? 'draft' : 'published';\n    const mapper = DataMapper({ language, locale });\n    return {\n        fetchTenantConfig: (tenantIdentifier: string) => fetchTenantConfig(apiClient, tenantIdentifier),\n        fetchNavigation: (path: string) =>\n            fetchNavigation(apiClient, path, language).then(mapper.API.Call.fetchNavigationToTree),\n        fetchTreeMap: () => fetchTreeMap(apiClient, language),\n        fetchLandingPage: (path: string) =>\n            fetchLandingPage(apiClient, path, version, language).then(mapper.API.Call.fetchLandingPageToLandingPage),\n        fetchDocument: (path: string) =>\n            fetchDocument(apiClient, path, version, language).then(mapper.API.Call.fetchDocumentToStory),\n        fetchProduct: (path: string): Promise<Product> =>\n            fetchProduct(apiClient, path, version, language).then(mapper.API.Call.fetchProductToProduct),\n        fetchFolder: (path: string) =>\n            fetchFolder(apiClient, path, version, language).then(mapper.API.Call.fetchFolderToCategory),\n        fetchFolderWithChildren: (path: string) =>\n            fetchFolderWithChildren(apiClient, path, version, language).then(\n                mapper.API.Call.fetchFolderToCategory(true),\n            ),\n        fetchShop: (path: string) =>\n            Promise.all([\n                fetchFolder(apiClient, path, version, language),\n                fetchHierarchy(apiClient, path, language),\n            ]).then(mapper.API.Call.fetchShopToShop),\n        fetchFooter: (path: string) =>\n            fetchFooter(apiClient, path, version, language).then(mapper.API.Call.fetchFooterToFooter),\n        fetchPriceRangeAndAttributes: (path: string) => fetchPriceRangeAndAttributes(apiClient, path),\n        search: (value: string) => search(apiClient, value, language).then(mapper.API.Call.searchProductToProductSlim),\n        searchOrderBy: (path: string, orderBy?: any, fitlers?: any, attributes?: any) =>\n            searchOrderBy(apiClient, path, language, orderBy, fitlers, attributes).then(\n                mapper.API.Call.searchProductToProductSlim,\n            ),\n        searchOrderByPriceRange: (path: string) =>\n            searchOrderByPriceRange(apiClient, path, language).then(mapper.API.Call.searchProductToProductSlim),\n        searchFilteredByPriceRange: (path: string, min: string, max: string) =>\n            searchFilteredByPriceRange(apiClient, path, language, min, max).then(\n                mapper.API.Call.searchProductToProductSlim,\n            ),\n        searchByTopic: (value: string) =>\n            searchByTopic(apiClient, value, language).then(mapper.API.Call.searchByTopicProductToProductSlim),\n    };\n};\n"],
  "mappings": "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",
  "names": ["import_js_api_client", "import_js_api_client", "_a"]
}
