{
  "version": 3,
  "sources": ["../../../node_modules/@crystallize/reactjs-components/src/image/component.tsx", "../../../node_modules/@crystallize/reactjs-components/dist/image/types.js", "../../../node_modules/@crystallize/reactjs-components/src/image/index.ts", "../../../src/use-cases/checkout/pricing.ts", "../../../src/use-cases/mapper/api-mappers.ts", "../../../src/use-cases/mapper/API/fetchDocumentToStory.ts", "../../../src/use-cases/mapper/API/fetchFolderToCategory.ts", "../../../src/use-cases/mapper/API/fetchFolderWithChildrenToCategoryWithChildren.ts", "../../../src/use-cases/mapper/API/fetchFooterToFooter.ts", "../../../src/use-cases/mapper/API/fetchLandingPageToLandingPage.ts", "../../../src/use-cases/mapper/API/fetchNavigationToTree.ts", "../../../src/use-cases/mapper/API/fetchProductToProduct.ts", "../../../src/use-cases/mapper/API/fetchShopToShop.ts", "../../../src/use-cases/mapper/API/searchByTopicProductToProductSlim.ts", "../../../src/use-cases/mapper/API/searchProductToProductSlim.ts", "../../../src/use-cases/mapper/Object/AnyIemToGrid.ts", "../../../src/use-cases/mapper/Object/APIImageToImage.ts", "../../../src/use-cases/mapper/Object/APIMetaSEOComponentToSEO.ts", "../../../src/use-cases/mapper/Object/APIPriceVariantsToPriceVariant.ts", "../../../src/use-cases/mapper/Object/APIProductVariantToProductVariant.ts", "../../../src/use-cases/mapper/index.ts", "../../../src/ui/components/price.tsx"],
  "sourcesContent": ["import { ImageVariant } from '@crystallize/js-api-client';\nimport { FunctionComponent } from 'react';\nimport { ImageProps } from './types';\n\nfunction getVariantSrc(variant: ImageVariant): string {\n    return `${variant.url} ${variant.width}w`;\n}\n\nexport const Image: FunctionComponent<ImageProps> = ({ children, ...restOfAllProps }) => {\n    const {\n        src,\n        url,\n        sizes,\n        variants,\n        altText,\n        alt: altPassed,\n        fallbackAlt,\n        caption,\n        className,\n        media,\n        _availableSizes,\n        _availableFormats,\n        width,\n        height,\n        ...rest\n    } = restOfAllProps;\n\n    let vars = (variants || []).filter((v) => !!v);\n\n    // if the alt is passed to the component we use that: highest priority\n    // if there is nothing from the API response (altText) then we use the fallbackAlt\n    // otherwise we set empty for W3C validation\n    const alt = altPassed || altText || fallbackAlt || '';\n\n    // Naive rendering POC\n    if (url && _availableSizes && _availableFormats) {\n        vars = [];\n        const urlWithoutFileExtension = url.replace(/\\.[^/]+$/, '');\n        const match = urlWithoutFileExtension.match(/(.+)(\\/)([^/]+)$/);\n        if (match) {\n            const [, base, , filename] = match;\n\n            _availableSizes.forEach((size) => {\n                _availableFormats.forEach((format) => {\n                    vars.push({\n                        url: `${base}/@${size}/${filename}.${format}`,\n                        key: `${size}.${format}`,\n                        width: size,\n                    });\n                });\n            });\n        }\n    }\n\n    const hasVariants = vars.length > 0;\n\n    // Get the biggest image from the variants\n    let biggestImage: ImageVariant = vars[0];\n    if (hasVariants) {\n        biggestImage = vars.reduce(function (acc: ImageVariant, v: ImageVariant): ImageVariant {\n            if (!acc.width || v.width > acc.width) {\n                return v;\n            }\n            return acc;\n        }, vars[0]);\n    }\n\n    // Determine srcSet\n    const std = vars.filter((v) => v.url && !v.url.endsWith('.webp') && !v.url.endsWith('.avif'));\n    const webp = vars.filter((v) => v.url && v.url.endsWith('.webp'));\n    const avif = vars.filter((v) => v.url && v.url.endsWith('.avif'));\n    const srcSet = std.map(getVariantSrc).join(', ');\n    const srcSetWebp = webp.map(getVariantSrc).join(', ');\n    const srcSetAvif = avif.map(getVariantSrc).join(', ');\n\n    // Determine the original file extension\n    let originalFileExtension = 'jpeg';\n    if (std.length > 0) {\n        const match = std[0].url.match(/\\.(?<name>[^.]+)$/);\n        originalFileExtension = match?.groups?.name || 'jpeg';\n\n        // Provide correct mime type for jpg\n        if (originalFileExtension === 'jpg') {\n            originalFileExtension = 'jpeg';\n        }\n    }\n\n    const commonProps = {\n        // Ensure fallback src for older browsers\n        src: src || url || (hasVariants ? std[0].url : undefined),\n        alt,\n        caption,\n        width: width ?? biggestImage?.width,\n        height: height ?? biggestImage?.height,\n    };\n\n    let useWebP = srcSetWebp.length > 0;\n    let useAvif = srcSetAvif.length > 0;\n\n    /**\n     * Only output Avif format if it is smaller than\n     * webP. For the future: show only one of them when\n     * the browser support for Avif is good enough\n     */\n    if (useWebP && useAvif) {\n        const [firstWebp] = webp;\n        const [firstAvif] = avif;\n        if (firstWebp.size && firstAvif.size) {\n            useAvif = firstWebp.size > firstAvif.size;\n        }\n    }\n\n    if (children) {\n        return children({\n            srcSet,\n            srcSetWebp,\n            srcSetAvif,\n            useAvif,\n            useWebP,\n            className,\n            sizes,\n            media,\n            ...commonProps,\n            ...rest,\n            originalFileExtension,\n        });\n    }\n\n    const captionString = caption?.html?.[0] || caption?.plainText?.[0] || '';\n\n    return (\n        <figure className={className}>\n            <picture>\n                {useAvif && <source srcSet={srcSetAvif} type=\"image/avif\" sizes={sizes} media={media} />}\n                {useWebP && <source srcSet={srcSetWebp} type=\"image/webp\" sizes={sizes} media={media} />}\n                {srcSet.length > 0 && (\n                    <source srcSet={srcSet} type={`image/${originalFileExtension}`} sizes={sizes} media={media} />\n                )}\n                {/* eslint-disable-next-line jsx-a11y/alt-text */}\n                <img {...commonProps} {...rest} />\n            </picture>\n            {captionString && <figcaption dangerouslySetInnerHTML={{ __html: captionString }} />}\n        </figure>\n    );\n};\n", "\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//# sourceMappingURL=types.js.map", "export * from './component';\nexport * from './types';\n", "import { ProductVariant } from '../contracts/ProductVariant';\nimport { Currency, CurrencyCode, getCurrencyFromCode } from '../contracts/Currency';\n\nexport type DisplayPrice = {\n    default: number;\n    discounted?: number;\n    percent: number;\n    currency: Currency;\n};\n\n/** @todo: MUST be EXTRACTED: as it used the Local to Project Type */\nexport default function displayPriceFor(\n    variant: ProductVariant,\n    identifiers: { default: string; discounted: string } = {\n        default: 'default',\n        discounted: 'sales',\n    },\n    currencyCode: CurrencyCode,\n    discount?: {\n        amount: number;\n    },\n): DisplayPrice {\n    const priceVariants = variant?.priceVariants;\n    const currency = getCurrencyFromCode(currencyCode);\n    if (!priceVariants) {\n        return {\n            default: 0.0,\n            percent: 0.0,\n            currency,\n        };\n    }\n\n    const defaultPrice =\n        priceVariants[identifiers.default] && priceVariants[identifiers.default].currency.code === currency.code\n            ? priceVariants[identifiers.default].value\n            : 0.0;\n    const discountedPrice =\n        discount?.amount ||\n        (priceVariants[identifiers.discounted] && priceVariants[identifiers.discounted].currency.code === currency.code)\n            ? priceVariants[identifiers.discounted].value\n            : undefined;\n\n    if (!discountedPrice) {\n        return {\n            default: defaultPrice,\n            percent: 0.0,\n            currency,\n        };\n    }\n\n    return {\n        default: defaultPrice,\n        discounted: discountedPrice,\n        percent: defaultPrice > 0 ? Math.round(((defaultPrice - discountedPrice) / defaultPrice) * 100) : 0.0,\n        currency,\n    };\n}\n", "import { Image } from '@crystallize/js-api-client';\n\nexport function stringForSingleLineComponentWithId(components: any[], id: string): string | undefined {\n    return components?.find((component) => component.id === id)?.content?.text;\n}\n\nexport function stringForRichTextComponentWithId(components: any[], id: string): string | undefined {\n    return components?.find((component) => component.id === id)?.content?.plainText?.join('\\n');\n}\n\ntype RichText = {\n    json?: any;\n    html?: string[];\n    plainText?: string[];\n};\n\nexport type Paragraph = {\n    title?: {\n        text?: string;\n    };\n    body?: RichText;\n    images?: Image[];\n    videos?: any[];\n};\n\nexport function paragraphsForParagraphCollectionComponentWithId(\n    components: any[],\n    id: string,\n): Paragraph[] | undefined {\n    return components.find((component: any) => component.id === id)?.content?.paragraphs;\n}\n\nexport type Section = {\n    title?: string;\n    properties: Record<string, string>;\n};\n\nexport function sectionsForPropertyTableComponentWithId(components: any[], id: string): Section[] | undefined {\n    const component = components.find((component: any) => component.id === id)?.content;\n    if (!component) {\n        return undefined;\n    }\n    return component.sections.map((section: any) => {\n        return {\n            title: section.title,\n            properties: section.properties.reduce((memo: Record<string, string>, property: any) => {\n                return {\n                    ...memo,\n                    [property.key]: property.value,\n                };\n            }, {}),\n        };\n    });\n}\n\nexport type Chunk = {\n    id?: string;\n    type?: string;\n    name?: string;\n    content?: any;\n};\n\nexport function chunksForChunkComponentWithId(components: any[], id: string): Chunk[][] | undefined {\n    const component = components.find((component: any) => component.id === id)?.content;\n    if (!component) {\n        return undefined;\n    }\n    return component?.chunks.map((chunk: any) => {\n        return chunk.map((data: any) => {\n            return {\n                id: data.id,\n                name: data.name,\n                content: data.content,\n                type: data.type,\n            };\n        });\n    });\n}\n\nexport function itemsForItemRelationComponentWithId(components: any[], id: string): any[] | undefined {\n    return components.find((component: any) => component.id === id)?.content?.items;\n}\n\nexport function choiceComponentWithId(\n    components: any[],\n    id: string,\n):\n    | {\n          id: string;\n          content: any;\n      }\n    | undefined {\n    const component = components.find((component: any) => component.id === id)?.content?.selectedComponent;\n    if (!component) {\n        return undefined;\n    }\n\n    return {\n        id: component.id,\n        content: component.content,\n    };\n}\n\nexport function numericValueForComponentWithId(components: any[], id: string): number | undefined {\n    const component = components.find((component: any) => component.id === id)?.content?.number;\n\n    return component;\n}\n\nexport function flattenRichText(richText?: RichText): {\n    html?: string;\n    plainText?: string;\n    json?: any;\n} {\n    return {\n        plainText: richText?.plainText?.join(''),\n        json: richText?.json,\n        html: richText?.html?.join(''),\n    };\n}\n", "import { CuratedStory, Story } from '../../contracts/Story';\nimport {\n    choiceComponentWithId,\n    stringForSingleLineComponentWithId,\n    paragraphsForParagraphCollectionComponentWithId,\n    itemsForItemRelationComponentWithId,\n    chunksForChunkComponentWithId,\n    numericValueForComponentWithId,\n    flattenRichText,\n} from '../../mapper/api-mappers';\nimport { DataMapper, DataMapperInterface } from '..';\n\nexport default (data: any): Story | CuratedStory => {\n    const mapper = DataMapper();\n    if (data.shape.identifier === 'curated-product-story') {\n        return documentToCuratedStory(mapper, data);\n    }\n    return documentToStory(mapper, data);\n};\n\n//@todo: we need to create a Mapper for the common properties of the Story and CuratedStory\nconst documentToStory = (mapper: DataMapperInterface, data: any): Story => {\n    const media = choiceComponentWithId(data.components, 'media');\n    const firstSeoChunk = chunksForChunkComponentWithId(data.components, 'meta')?.[0];\n    const relatedArticles = itemsForItemRelationComponentWithId(data.components, 'up-next') || [];\n    const featuedProducts = itemsForItemRelationComponentWithId(data.components, 'featured');\n    const story = paragraphsForParagraphCollectionComponentWithId(data.components, 'story');\n\n    const dto: Story = {\n        type: 'story',\n        path: data.path,\n        name: data.name,\n        title: stringForSingleLineComponentWithId(data.components, 'title') || data.name!,\n        description: flattenRichText(data.components.find((c: any) => c.id === 'intro')?.content),\n        createdAt: data.createdAt,\n        medias: {\n            images: media?.id === 'image' ? mapper.API.Object.APIImageToImage(media.content.images) : [],\n            videos: media?.id === 'video' ? [] : [], // @todo: to be implemented\n        },\n        story:\n            story?.map((paragraph) => {\n                return {\n                    title: paragraph.title?.text || '',\n                    body: flattenRichText(paragraph.body),\n                    images: mapper.API.Object.APIImageToImage(paragraph.images),\n                };\n            }) || [],\n        relatedArticles,\n        featuredProducts:\n            featuedProducts?.map((item) => {\n                return {\n                    id: item?.id,\n                    name: item.name,\n                    path: item.path,\n                    topics: [],\n                    variant: mapper.API.Object.APIProductVariantToProductVariant(item.defaultVariant),\n                };\n            }) || [],\n        seo: mapper.API.Object.APIMetaSEOComponentToSEO(firstSeoChunk),\n    };\n    return dto;\n};\n\nconst documentToCuratedStory = (mapper: DataMapperInterface, data: any): CuratedStory => {\n    const intro = flattenRichText(data.components.find((c: any) => c.id === 'description')?.content);\n    const media = data.components.find((c: any) => c.id === 'shoppable-image')?.content;\n    const story = paragraphsForParagraphCollectionComponentWithId(data.components, 'story');\n    const firstSeoChunk = chunksForChunkComponentWithId(data.components, 'meta')?.[0];\n    const dto: CuratedStory = {\n        type: 'curated-product-story',\n        title: stringForSingleLineComponentWithId(data.components, 'title') || data.name!,\n        description: intro,\n        path: data.path,\n        name: data.name,\n        medias: {\n            images: mapper.API.Object.APIImageToImage(media.images),\n            videos: [],\n        },\n        merchandising:\n            chunksForChunkComponentWithId(data.components, 'merchandising')?.map((chunk) => {\n                return {\n                    products:\n                        itemsForItemRelationComponentWithId(chunk, 'products')?.map((product: any) => {\n                            return {\n                                id: product.id,\n                                name: product.name,\n                                path: product.path,\n                                variant: mapper.API.Object.APIProductVariantToProductVariant(product.defaultVariant),\n                                variants: product.variants.map(mapper.API.Object.APIProductVariantToProductVariant),\n                                topics: [],\n                            };\n                        }) || [],\n                    x: numericValueForComponentWithId(chunk, 'hotspot-x') || 0,\n                    y: numericValueForComponentWithId(chunk, 'hotspot-y') || 0,\n                };\n            }) || [],\n        story:\n            story?.map((paragraph) => {\n                return {\n                    title: paragraph.title?.text || '',\n                    body: flattenRichText(paragraph.body),\n                    images: mapper.API.Object.APIImageToImage(paragraph.images),\n                };\n            }) || [],\n        relatedArticles: [],\n        seo: mapper.API.Object.APIMetaSEOComponentToSEO(firstSeoChunk),\n    };\n    return dto;\n};\n", "import { Category } from '../../contracts/Category';\nimport {\n    choiceComponentWithId,\n    stringForRichTextComponentWithId,\n    stringForSingleLineComponentWithId,\n} from '../../mapper/api-mappers';\nimport { DataMapper } from '..';\n\nexport default (data: any): Category => {\n    const mapper = DataMapper();\n    const hero = choiceComponentWithId(data.components, 'hero-content');\n    const grid =\n        hero?.content?.grids?.[0] ||\n        (hero?.content?.items ? mapper.API.Object.AnyItemToGrid(hero?.content?.items) : null);\n    const firstSeoChunk = data?.meta?.content?.chunks[0];\n    const dto: Category = {\n        name: data?.name,\n        path: data?.path,\n        title: stringForSingleLineComponentWithId(data.components, 'title') || data.name!,\n        description: stringForRichTextComponentWithId(data.components, 'description') || data.name!,\n        hero: grid\n            ? {\n                  id: `grid-${hero?.id ?? data.id}`,\n                  ...grid,\n              }\n            : undefined,\n        seo: mapper?.API?.Object?.APIMetaSEOComponentToSEO(firstSeoChunk),\n    };\n\n    return dto;\n};\n", "import { CategoryWithChildren } from '../../contracts/Category';\nimport { CuratedStorySlim, StorySlim } from '../../contracts/Story';\nimport {\n    choiceComponentWithId,\n    chunksForChunkComponentWithId,\n    itemsForItemRelationComponentWithId,\n    numericValueForComponentWithId,\n    stringForSingleLineComponentWithId,\n} from '../../mapper/api-mappers';\nimport mapFetchFolderToCategory from './fetchFolderToCategory';\nimport { DataMapper } from '..';\nimport { ProductSlim } from '../../contracts/Product';\n\nexport default (data: any): CategoryWithChildren => {\n    const mapper = DataMapper();\n\n    return {\n        ...mapFetchFolderToCategory(data),\n\n        children: data.children?.map((child: any): CuratedStorySlim | StorySlim | ProductSlim | undefined => {\n            const common = {\n                name: child.name,\n                path: child.path,\n            };\n            if (child.shape.identifier === 'curated-product-story') {\n                const title = stringForSingleLineComponentWithId(child.components, 'title') || child.name!;\n                const intro = child.components.find((c: any) => c.id === 'description')?.content;\n                const media = child.components.find((c: any) => c.id === 'shoppable-image')?.content;\n                return {\n                    ...common,\n                    title,\n                    description: intro,\n                    type: 'curated-product-story',\n                    medias: {\n                        images: mapper.API.Object.APIImageToImage(media.images),\n                        videos: [],\n                    },\n                    merchandising:\n                        chunksForChunkComponentWithId(child.components, 'merchandising')?.map((chunk) => {\n                            return {\n                                products:\n                                    itemsForItemRelationComponentWithId(chunk, 'products')?.map((product: any) => {\n                                        return {\n                                            id: product.id,\n                                            name: product.name,\n                                            path: product.path,\n                                            variant: mapper.API.Object.APIProductVariantToProductVariant(\n                                                product.defaultVariant,\n                                            ),\n                                            topics: [],\n                                        };\n                                    }) || [],\n                                x: numericValueForComponentWithId(chunk, 'hotspot-x') || 0,\n                                y: numericValueForComponentWithId(chunk, 'hotspot-y') || 0,\n                            };\n                        }) || [],\n                };\n            }\n            if (child.shape.identifier === 'product') {\n                return {\n                    id: child.id,\n                    ...common,\n                    topics: [],\n                    variant: mapper.API.Object.APIProductVariantToProductVariant(child.defaultVariant),\n                };\n            }\n            if (child.shape.identifier === 'story') {\n                const title = stringForSingleLineComponentWithId(child.components, 'title') || child.name!;\n                const intro = child.components.find((c: any) => c.id === 'intro')?.content;\n                const media = choiceComponentWithId(child.components, 'media');\n                return {\n                    ...common,\n                    title,\n                    description: intro,\n                    type: 'story',\n                    medias: {\n                        images: media?.id === 'image' ? mapper.API.Object.APIImageToImage(media.content.images) : [],\n                        videos: media?.id === 'video' ? [] : [], // @todo: to be implemented\n                    },\n                };\n            }\n        }),\n    };\n};\n", "import { Footer } from '../../contracts/Footer';\nimport {\n    chunksForChunkComponentWithId,\n    flattenRichText,\n    stringForSingleLineComponentWithId,\n} from '../../mapper/api-mappers';\nimport { DataMapper } from '..';\n\nexport default (data: any): Footer => {\n    const mapper = DataMapper();\n    if (data === null) {\n        return {\n            copyright: '',\n            contact: {\n                plainText: '',\n                html: '',\n            },\n            links: {\n                plainText: '',\n                html: '',\n            },\n            socialLinks: [],\n            promotions: {\n                heading: '',\n                cards: [],\n            },\n        };\n    }\n\n    const socialLinks = chunksForChunkComponentWithId(data.components, 'social');\n    const promotionCards = chunksForChunkComponentWithId(data.components, 'promotion-cards');\n\n    const dto: Footer = {\n        copyright: stringForSingleLineComponentWithId(data.components, 'copyright') || '',\n        contact: flattenRichText(data.components.find((c: any) => c.id === 'contact-information')?.content),\n        links: data.components.find((c: any) => c.id === 'links')?.content,\n        socialLinks:\n            socialLinks?.map((socialLink: any) => {\n                const logo = socialLink.find((c: any) => c.id === 'logo')?.content;\n                return {\n                    logo: mapper.API.Object.APIImageToImage(logo.images),\n                    link: stringForSingleLineComponentWithId(socialLink, 'link') || '',\n                };\n            }) || [],\n        promotions: {\n            heading: stringForSingleLineComponentWithId(data.components, 'promotion-section-heading') || '',\n            cards:\n                promotionCards?.map((card: any) => {\n                    const image = card.find((c: any) => c.id === 'image')?.content;\n                    return {\n                        title: stringForSingleLineComponentWithId(card, 'title') || '',\n                        link: stringForSingleLineComponentWithId(card, 'link') || '',\n                        image: mapper.API.Object.APIImageToImage(image.images),\n                    };\n                }) || [],\n        },\n    };\n\n    return dto;\n};\n", "import { LandingPage } from '../../contracts/LandingPage';\nimport { DataMapper } from '..';\n\nexport default (data: any): LandingPage => {\n    const mapper = DataMapper();\n    const firstSeoChunk = data?.meta?.content?.chunks?.[0];\n    return {\n        name: data?.name,\n        path: data?.path,\n        seo: mapper?.API?.Object?.APIMetaSEOComponentToSEO(firstSeoChunk),\n        grids: data?.grids?.content?.grids?.map((grid: any) => {\n            return {\n                id: grid?.id,\n                rows: grid?.rows,\n            };\n        }),\n    };\n};\n", "import { Tree } from '../../contracts/Tree';\n\nexport const recursiveMap = (level: any, defaultType: string): Tree => {\n    return {\n        id: level.id,\n        name: level.name,\n        path: level.path,\n        type: level.__typename ?? defaultType,\n        children: level.children?.map((child: any) => recursiveMap(child, defaultType)) ?? [],\n    };\n};\n\nexport default (\n    navigation: any,\n): {\n    folders: Tree[];\n    topics: Tree[];\n} => {\n    return {\n        folders: navigation.folders.tree.children.map((tree: any) => recursiveMap(tree, 'folder')),\n        topics: navigation.topics.tree.map((tree: any) => recursiveMap(tree, '_topic')),\n    };\n};\n", "import { Item, ProductVariant as APIProductVariant, Product as APIProduct } from '@crystallize/js-api-client';\nimport { Product } from '../../contracts/Product';\nimport { ProductVariant } from '../../contracts/ProductVariant';\nimport {\n    chunksForChunkComponentWithId,\n    flattenRichText,\n    itemsForItemRelationComponentWithId,\n    paragraphsForParagraphCollectionComponentWithId,\n    sectionsForPropertyTableComponentWithId,\n    stringForRichTextComponentWithId,\n    stringForSingleLineComponentWithId,\n} from '../../mapper/api-mappers';\nimport { DataMapper } from '..';\n\nexport default (\n    data: Omit<APIProduct, 'variants'> &\n        Item & { components: any } & { variants: Array<APIProductVariant & { components: any; description: any }> },\n): Product => {\n    const mapper = DataMapper();\n    const story = paragraphsForParagraphCollectionComponentWithId(data.components, 'story');\n    const sections = sectionsForPropertyTableComponentWithId(data.components, 'properties');\n    const firstDimensionsChunk = chunksForChunkComponentWithId(data.components, 'dimensions')?.[0];\n    const firstSeoChunk = chunksForChunkComponentWithId(data.components, 'meta')?.[0];\n    const downloads = chunksForChunkComponentWithId(data.components, 'downloads');\n    const relatedItems = itemsForItemRelationComponentWithId(data.components, 'related-items');\n    const productDescription = stringForRichTextComponentWithId(data.components, 'description') || data.name!;\n\n    const variants: ProductVariant[] =\n        data?.variants?.map((variant) => {\n            const mappedVariant = mapper.API.Object.APIProductVariantToProductVariant(variant);\n            let description = productDescription;\n            const variantDescription = variant?.description?.content?.selectedComponent?.content?.plainText?.join('');\n            const variantDescriptionType = variant?.description?.content?.selectedComponent?.id;\n            if (variantDescriptionType) {\n                description =\n                    variantDescriptionType === 'extra'\n                        ? productDescription + ' ' + variantDescription\n                        : variantDescription;\n            }\n            return {\n                ...mappedVariant,\n                description,\n            };\n        }) || [];\n\n    const defaultVariant = variants.find((variant) => variant.isDefault) || variants[0];\n\n    const dto: Product = {\n        id: data.id,\n        path: data.path!,\n        name: data.name!,\n        title: stringForSingleLineComponentWithId(data.components, 'title') || data.name!,\n        description: productDescription,\n        story:\n            story?.map((paragraph) => {\n                return {\n                    title: paragraph.title?.text || '',\n                    body: flattenRichText(paragraph.body),\n                    images: mapper.API.Object.APIImageToImage(paragraph.images),\n                };\n            }) || [],\n        specifications:\n            sections?.map((section) => {\n                return {\n                    title: section.title || '',\n                    properties: section.properties || {},\n                };\n            }) || [],\n        dimensions: !firstDimensionsChunk\n            ? []\n            : firstDimensionsChunk.reduce(\n                  (\n                      memo: Record<\n                          string,\n                          {\n                              title: string;\n                              value: number;\n                              unit: string;\n                          }\n                      >,\n                      data: any,\n                  ) => {\n                      return {\n                          ...memo,\n                          [data.id]: {\n                              title: data.name,\n                              value: data?.content?.number || 0.0,\n                              unit: data?.content?.unit || '',\n                          },\n                      };\n                  },\n                  {},\n              ),\n        downloads:\n            downloads?.map((chunk) => {\n                const mapped = chunk.reduce((memo: Record<string, any>, data: any) => {\n                    let value = undefined;\n                    switch (data.type) {\n                        case 'singleLine':\n                            value = data.content?.text || '';\n                            break;\n                        case 'richText':\n                            value = data.content?.json || '';\n                            break;\n                        case 'files':\n                            value =\n                                data.content?.files?.map((file: any) => {\n                                    return {\n                                        url: file.url,\n                                        title: file.title || '',\n                                    };\n                                }) || [];\n                            break;\n                    }\n                    return {\n                        ...memo,\n                        [data.id]: value,\n                    };\n                }, {});\n\n                return {\n                    title: mapped['title' as keyof typeof mapped] || '',\n                    description: {\n                        json: mapped['description' as keyof typeof mapped],\n                    },\n                    files: mapped['files' as keyof typeof mapped],\n                };\n            }) || [],\n        relatedItems:\n            relatedItems?.map((item) => {\n                return {\n                    id: item.id,\n                    name: item.name,\n                    path: item.path,\n                    topics: [],\n                    variant: mapper.API.Object.APIProductVariantToProductVariant(item.defaultVariant),\n                };\n            }) || [],\n        topics:\n            data.topics?.map((topic) => {\n                return {\n                    name: topic.name,\n                    path: topic.path,\n                };\n            }) || [],\n        seo: mapper.API.Object.APIMetaSEOComponentToSEO(firstSeoChunk),\n        vat: {\n            name: data.vatType?.name || 'Exempt.',\n            rate: data.vatType?.percent || 0.0,\n        },\n        variants,\n        defaultVariant,\n    };\n    return dto;\n};\n", "import { ProductSlim } from '../../contracts/Product';\nimport { Shop } from '../../contracts/Shop';\nimport {\n    choiceComponentWithId,\n    stringForRichTextComponentWithId,\n    stringForSingleLineComponentWithId,\n} from '../../mapper/api-mappers';\nimport { DataMapper } from '..';\n\nexport default (data: any): Shop => {\n    const mapper = DataMapper();\n    const [folder, hierarchy] = data;\n    const hero = choiceComponentWithId(folder.components, 'hero-content');\n    const grid =\n        hero?.content?.grids?.[0] ||\n        (hero?.content?.items ? mapper.API.Object.AnyItemToGrid(hero?.content?.items) : null);\n\n    const firstSeoChunk = folder.meta?.content?.chunks[0];\n    const dto: Shop = {\n        name: folder.name,\n        title: stringForSingleLineComponentWithId(folder.components, 'title') || data.name!,\n        path: folder.path,\n        description: stringForRichTextComponentWithId(folder.components, 'description') || data.name!,\n        hero: grid\n            ? {\n                  id: `grid-${hero?.id ?? folder.id}`,\n                  ...grid,\n              }\n            : undefined,\n        seo: mapper.API.Object.APIMetaSEOComponentToSEO(firstSeoChunk),\n        categories: hierarchy.tree?.children.map((child: any) => {\n            return {\n                name: child.name,\n                path: child.path,\n                description: child.description?.content,\n                products: child?.children?.map((product: any): ProductSlim => {\n                    return {\n                        id: product.id,\n                        name: product.name,\n                        path: product.path,\n                        variant: mapper.API.Object.APIProductVariantToProductVariant(product.defaultVariant),\n                        topics: [],\n                    };\n                }),\n            };\n        }),\n    };\n    return dto;\n};\n", "import { SearchByTopicsProductList } from '../../contracts/Product';\nimport { DataMapper } from '..';\n\nexport default (data: any): SearchByTopicsProductList => {\n    const mapper = DataMapper();\n    return {\n        products: mapper.API.Call.searchProductToProductSlim(data.search.edges),\n        topics:\n            data?.topics?.aggregations?.topics.map((topic: any) => {\n                return {\n                    name: topic.name,\n                    path: topic.path,\n                };\n            }) || [],\n    };\n};\n", "import { ProductSlim } from '../../contracts/Product';\nimport { DataMapper } from '..';\n\nexport default (data: any): ProductSlim[] => {\n    const mapper = DataMapper();\n    return (\n        data.map(({ node }: any) => {\n            return {\n                id: node.id,\n                name: node.name,\n                path: node.path,\n                variant: mapper.API.Object.APIProductVariantToProductVariant(node.matchingVariant),\n                topics:\n                    node.topics?.map((topic: any) => {\n                        return {\n                            name: topic.name,\n                            path: topic.path,\n                        };\n                    }) ?? [],\n            };\n        }) || []\n    );\n};\n", "import { Grid } from '../../contracts/Grid';\n\nexport default (items: any[]): Grid => {\n    if (items.length === 0) {\n        return {\n            id: '',\n            rows: [],\n        };\n    }\n    return {\n        id: '',\n        rows: items.map((item, index) => {\n            return {\n                columns: [\n                    {\n                        layout: {\n                            rowspan: 1,\n                            colspan: 3,\n                            colIndex: 0,\n                            rowIndex: index,\n                        },\n                        item: item,\n                    },\n                ],\n            };\n        }),\n    };\n};\n", "import { Image as APIImage } from '@crystallize/js-api-client';\nimport { Image } from '../../contracts/Image';\n\nexport default (images?: APIImage[]): Image[] => {\n    return (\n        images?.map((image) => {\n            return {\n                key: image.key,\n                url: image.url!,\n                altText: image.altText || '',\n                variants:\n                    image.variants?.map((variant) => {\n                        return {\n                            key: variant.key,\n                            url: variant.url!,\n                            width: variant.width!,\n                            height: variant.height!,\n                        };\n                    }) || [],\n            };\n        }) || []\n    );\n};\n", "import { Chunk } from '../../mapper/api-mappers';\n\nexport default (chunk?: Chunk[]) => {\n    return !chunk\n        ? {\n              title: '',\n          }\n        : (chunk.reduce(\n              (memo: Record<string, string>, data: any) => {\n                  let value = undefined;\n                  switch (data.type) {\n                      case 'singleLine':\n                          value = data.content?.text || '';\n                          break;\n                      case 'richText':\n                          value = data.content?.plainText?.join(' ');\n                          break;\n                      case 'images':\n                          value = data.content?.images?.[0]?.url;\n                          if (!value) {\n                              value = data.content?.firstImage?.url;\n                          }\n                          break;\n                  }\n                  return {\n                      ...memo,\n                      [data.id]: value,\n                  };\n              },\n              {\n                  title: '',\n              },\n          ) as { title: string });\n};\n", "import { ProductPriceVariant } from '@crystallize/js-api-client';\nimport { Price } from '../../contracts/Price';\nimport { getCurrencyFromCode } from '../../contracts/Currency';\n\nexport default (variants: ProductPriceVariant[]): Record<string, Price> => {\n    return variants.reduce((memo: Record<string, Price>, priceVariant: ProductPriceVariant) => {\n        return {\n            ...memo,\n            [priceVariant.identifier]: {\n                identifier: priceVariant.identifier,\n                value: priceVariant.price || 0.0,\n                currency: getCurrencyFromCode(priceVariant.currency || 'EUR'),\n                name: priceVariant.name || 'Unkonwn',\n            },\n        };\n    }, {});\n};\n", "import { ProductStockLocation, ProductVariant as APIProductVariant } from '@crystallize/js-api-client';\nimport { ProductVariant } from '../../contracts/ProductVariant';\nimport { StockLocation } from '../../contracts/StockLocation';\nimport { DataMapper } from '..';\n\nexport default (variant: APIProductVariant): ProductVariant => {\n    const mapper = DataMapper();\n    const priceVariants = mapper.API.Object.APIPriceVariantsToPriceVariant(variant.priceVariants ?? []);\n    const images = variant.images ?? (variant.firstImage ? [variant.firstImage] : []);\n    return {\n        id: variant.id,\n        isDefault: !!variant.isDefault,\n        name: variant.name || 'Unknow',\n        sku: variant.sku,\n        priceVariants,\n        stockLocations:\n            variant.stockLocations?.reduce(\n                (memo: Record<string, StockLocation>, stockLocation: ProductStockLocation) => {\n                    return {\n                        ...memo,\n                        [stockLocation.identifier]: {\n                            identifier: stockLocation.identifier,\n                            name: stockLocation.name || 'Unknown',\n                            stock: stockLocation.stock || 0,\n                        },\n                    };\n                },\n                {},\n            ) || {},\n        images: mapper.API.Object.APIImageToImage(images),\n        attributes:\n            variant.attributes?.reduce((memo: Record<string, string>, attribute) => {\n                return {\n                    ...memo,\n                    [attribute.attribute]: attribute.value || '',\n                };\n            }, {}) || {},\n    };\n};\n", "import fetchDocumentToStory from './API/fetchDocumentToStory';\nimport fetchFolderToCategory from './API/fetchFolderToCategory';\nimport fetchFolderWithChildrenToCategoryWithChildren from './API/fetchFolderWithChildrenToCategoryWithChildren';\nimport fetchFooterToFooter from './API/fetchFooterToFooter';\nimport fetchLandingPageToLandingPage from './API/fetchLandingPageToLandingPage';\nimport fetchNavigationToTree from './API/fetchNavigationToTree';\nimport fetchProductToProduct from './API/fetchProductToProduct';\nimport fetchShopToShop from './API/fetchShopToShop';\nimport searchByTopicProductToProductSlim from './API/searchByTopicProductToProductSlim';\nimport searchProductToProductSlim from './API/searchProductToProductSlim';\nimport AnyIemToGrid from './Object/AnyIemToGrid';\nimport APIImageToImage from './Object/APIImageToImage';\nimport APIMetaSEOComponentToSEO from './Object/APIMetaSEOComponentToSEO';\nimport APIPriceVariantsToPriceVariant from './Object/APIPriceVariantsToPriceVariant';\nimport APIProductVariantToProductVariant from './Object/APIProductVariantToProductVariant';\n\nexport type DataMapperContext = {\n    locale?: string;\n    language: string;\n};\n\nexport const DataMapper = (context?: DataMapperContext) => {\n    return {\n        API: {\n            Call: {\n                fetchDocumentToStory: fetchDocumentToStory,\n                fetchFolderToCategory: (withChildren: boolean = false) => {\n                    if (withChildren) {\n                        return fetchFolderWithChildrenToCategoryWithChildren;\n                    }\n                    return fetchFolderToCategory;\n                },\n                fetchFooterToFooter: fetchFooterToFooter,\n                fetchLandingPageToLandingPage: fetchLandingPageToLandingPage,\n                fetchProductToProduct: fetchProductToProduct,\n                fetchShopToShop: fetchShopToShop,\n                fetchNavigationToTree: fetchNavigationToTree,\n                searchByTopicProductToProductSlim: searchByTopicProductToProductSlim,\n                searchProductToProductSlim: searchProductToProductSlim,\n            },\n            Object: {\n                AnyItemToGrid: AnyIemToGrid,\n                APIImageToImage: APIImageToImage,\n                APIMetaSEOComponentToSEO: APIMetaSEOComponentToSEO,\n                APIPriceVariantsToPriceVariant: APIPriceVariantsToPriceVariant,\n                APIProductVariantToProductVariant: APIProductVariantToProductVariant,\n            },\n        },\n    };\n};\n\nexport type DataMapperInterface = ReturnType<typeof DataMapper>;\n", "import { CartItem } from '@crystallize/node-service-api-request-handlers';\nimport displayPriceFor, { DisplayPrice } from '~/use-cases/checkout/pricing';\nimport { Price as CrystallizePrice } from '../lib/pricing/pricing-component';\nimport { DataMapper } from '~/use-cases/mapper';\nimport { useAppContext } from '../app-context/provider';\nimport { ProductVariant } from '~/use-cases/contracts/ProductVariant';\n\nexport const DiscountedPrice: React.FC<{ price: DisplayPrice; size?: string }> = ({ price, size = 'medium' }) => {\n    const priceSize = {\n        small: {\n            default: 'text-md font-semibold',\n            previous: 'line-through font-semibold pt-1 text-xs',\n            discount: 'text-md font-semibold text-green2',\n            percentage: 'text-sm py-1 px-2 h-[26px] rounded-md bg-[#efefef] font-medium',\n        },\n        medium: {\n            default: 'text-2xl font-bold',\n            previous: 'line-through font-semibold pt-1 text-sm',\n            discount: 'text-2xl font-bold text-green2',\n            percentage: 'text-sm py-1 px-2 h-[26px] rounded-md bg-[#efefef] font-bold',\n        },\n    };\n    const { default: defaultPrice, discounted: discountPrice, percent: discountPercentage, currency } = price;\n\n    return (\n        <div>\n            {discountPrice && discountPrice < defaultPrice ? (\n                <div className=\"flex flex-wrap  flex-col\">\n                    <div className={priceSize[size as keyof typeof priceSize].previous}>\n                        <CrystallizePrice currencyCode={currency.code}>{defaultPrice}</CrystallizePrice>\n                    </div>\n                    <div className=\"flex gap-2 items-center \">\n                        <div className={priceSize[size as keyof typeof priceSize].discount}>\n                            <CrystallizePrice currencyCode={currency.code}>{discountPrice}</CrystallizePrice>\n                        </div>\n                        <div className={priceSize[size as keyof typeof priceSize].percentage}>\n                            -{discountPercentage}%\n                        </div>\n                    </div>\n                </div>\n            ) : (\n                <div className={priceSize[size as keyof typeof priceSize].default}>\n                   \n                </div>\n            )}\n        </div>\n    );\n};\n\nexport const Price: React.FC<{ variant: ProductVariant; size?: string }> = ({ variant, size = 'medium' }) => {\n    const { state } = useAppContext();\n    const price = displayPriceFor(\n        variant,\n        {\n            default: 'default',\n            discounted: 'sales',\n        },\n        state.currency.code,\n    );\n    return <DiscountedPrice price={price} size={size} />;\n};\n\nexport const CartItemPrice: React.FC<{ item: CartItem; saving: any; size?: string }> = ({\n    item,\n    saving,\n    size = 'small',\n}) => {\n    const mapper = DataMapper();\n    const { state, _t } = useAppContext();\n    return (\n        <>\n            <Price variant={mapper.API.Object.APIProductVariantToProductVariant(item.variant)} size={size} />\n            <div>\n                {_t('total')}:{' '}\n                <CrystallizePrice currencyCode={state.currency.code}>{item.price.gross}</CrystallizePrice>\n                {saving && (\n                    <>\n                        <del className=\"text-red mx-2\">\n                            <CrystallizePrice currencyCode={state.currency.code}>\n                                {item.price.net + saving.amount}\n                            </CrystallizePrice>\n                        </del>\n                        <small>({saving.quantity} for free!)</small>\n                    </>\n                )}\n            </div>\n        </>\n    );\n};\n"],
  "mappings": "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",
  "names": ["component", "_a", "_a", "_a", "_a", "_b", "_c", "_d", "_e", "_f", "data", "_a", "_b", "Price"]
}
