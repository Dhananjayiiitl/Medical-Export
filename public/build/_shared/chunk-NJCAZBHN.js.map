{
  "version": 3,
  "sources": ["../../../src/ui/pages/LandingPage.tsx"],
  "sourcesContent": ["import { Grid } from '../components/grid/grid';\nimport { LandingPage } from '~/use-cases/contracts/LandingPage';\n\n\nexport const links: LinksFunction = () => {\n    return [{ rel: 'stylesheet', href: splideStyles }];\n};\n\nexport let meta: MetaFunction = ({ data }) => {\n    return buildMetas(data);\n};\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const path = '/shop';\n    const { shared, secret } = await getStoreFront(requestContext.host);\n    const api = CrystallizeAPI({\n        apiClient: secret.apiClient,\n        language: requestContext.language,\n        isPreview: requestContext.isPreview,\n    });\n    const shop = await api.fetchShop(path);\n\n    return json({ shop }, StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', [path], shared.config.tenantIdentifier));\n};\nexport default ({ data: landing }: { data: LandingPage }) => {\n    \n\n    return (\n        <div className=\"min-h-[100vh]\">\n            {landing?.grids?.map((grid, index) => (\n                <div key={`${grid.id}-${index}`} className=\"mx-auto w-full test\">\n                    <Grid grid={grid} />\n                </div>\n            ))}\n\n        </div>\n    );\n};\n"],
  "mappings": ";;;;;;;;;;;AAoCoB;AAPpB,IAAO,sBAAQ,CAAC,EAAE,MAAM,QAAQ,MAA6B;AA7B7D;AAgCI,SACI,mDAAC,SAAI,WAAU,iBACV,mDAAS,UAAT,mBAAgB,IAAI,CAAC,MAAM,UACxB,mDAAC,SAAgC,WAAU,uBACvC,6DAAC,QAAK,QAAN;AAAA;AAAA;AAAA;AAAA,SAAkB,KADZ,GAAG,KAAK,MAAM,SAAxB;AAAA;AAAA;AAAA;AAAA,SAEA,MAJR;AAAA;AAAA;AAAA;AAAA,SAOA;AAER;",
  "names": []
}
