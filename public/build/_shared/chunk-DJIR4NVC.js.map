{
  "version": 3,
  "sources": ["../../../node_modules/@crystallize/reactjs-hooks/src/core/MainProvider/Reducer.ts", "../../../node_modules/@crystallize/reactjs-hooks/src/core/MainProvider/MainProvider.tsx", "../../../node_modules/@crystallize/reactjs-hooks/src/core/hooks/useFetch.ts", "../../../node_modules/@crystallize/reactjs-hooks/src/core/hooks/useHydrated.ts", "../../../node_modules/@crystallize/reactjs-hooks/src/index.ts"],
  "sourcesContent": ["import { ClientConfiguration } from '@crystallize/js-api-client';\n\ntype Action =\n    | { type: 'LOADING'; state: boolean }\n    | { type: 'UPDATE_CONFIGURATION'; configuration: ClientConfiguration }\n    | { type: 'CHANGE_LANGUAGE'; language: string };\n\nexport type Actions = {\n    loading: (state: boolean) => void;\n    updateConfiguration: (configuration: ClientConfiguration) => void;\n    changeLanguage: (language: string) => void;\n};\n\nexport type Dispatch = (action: Action) => void;\n\nexport type State = {\n    configuration: ClientConfiguration;\n    loading: boolean;\n    language: string;\n};\n\nexport function Reducer(state: State, action: Action) {\n    switch (action.type) {\n        case 'LOADING': {\n            return {\n                ...state,\n                loading: action.state,\n            };\n        }\n        case 'CHANGE_LANGUAGE': {\n            return {\n                ...state,\n                language: action.language,\n            };\n        }\n        case 'UPDATE_CONFIGURATION': {\n            return {\n                ...state,\n                configuration: action.configuration,\n            };\n        }\n        default: {\n            throw new Error('Main Provider - Unhandled action type');\n        }\n    }\n}\n\nexport function mapToReducerActions(dispatch: Dispatch): Actions {\n    return {\n        loading: (state: boolean) => dispatch({ type: 'LOADING', state }),\n        changeLanguage: (language: string) => dispatch({ type: 'CHANGE_LANGUAGE', language }),\n        updateConfiguration: (configuration: ClientConfiguration) =>\n            dispatch({ type: 'UPDATE_CONFIGURATION', configuration }),\n    };\n}\n", "import * as React from 'react';\nimport { State, Dispatch, Actions, Reducer, mapToReducerActions } from './Reducer';\nimport { FunctionComponent } from 'react';\nimport {\n    ClientConfiguration,\n    createClient,\n    ClientInterface,\n    createNavigationFetcher,\n    createProductHydrater,\n    createOrderFetcher,\n    createCatalogueFetcher,\n    Order,\n} from '@crystallize/js-api-client';\n\nconst StateContext = React.createContext<State | undefined>(undefined);\nconst DispatchContext = React.createContext<Dispatch | undefined>(undefined);\n\nconst initialState = (configuration: ClientConfiguration, language: string): State => {\n    return {\n        loading: false,\n        language: language,\n        configuration: configuration,\n    };\n};\n\nconst CrystallizeProvider: FunctionComponent<{\n    children: React.ReactNode;\n    language: string;\n    tenantIdentifier: string;\n    accessTokenId?: string;\n    accessTokenSecret?: string;\n}> = ({ tenantIdentifier, accessTokenId, accessTokenSecret, language, children }) => {\n    const [state, dispatch] = React.useReducer(\n        Reducer,\n        initialState({ tenantIdentifier, accessTokenId, accessTokenSecret }, language),\n    );\n    return (\n        <StateContext.Provider value={state}>\n            <DispatchContext.Provider value={dispatch}>{children}</DispatchContext.Provider>\n        </StateContext.Provider>\n    );\n};\n\nfunction useCrystallizeState() {\n    const context = React.useContext(StateContext);\n    if (context === undefined) {\n        throw new Error('useCrystallizeState must be used within the MainProvider.');\n    }\n    return context;\n}\n\nfunction useCrystallizeDispatch() {\n    const context = React.useContext(DispatchContext);\n    if (context === undefined) {\n        throw new Error('useCrystallizeDispatch must be used within the MainProvider.');\n    }\n    return context;\n}\n\nexport type LanguageAwareTreeFetcher = (\n    path: string,\n    depth: number,\n    extraQuery?: any,\n    perLevel?: (currentLevel: number) => any,\n) => Promise<any>;\n\nexport type LanguageAwareHydrater = (\n    items: string[],\n    extraQuery?: any,\n    perProduct?: (item: string, index: number) => any,\n) => Promise<any>;\n\ntype helpers = {\n    catalogueFetcher: ReturnType<typeof createCatalogueFetcher>;\n    navigationFetcher: {\n        byFolders: LanguageAwareTreeFetcher;\n        byTopics: LanguageAwareTreeFetcher;\n    };\n    productHydrater: {\n        byPaths: LanguageAwareHydrater;\n        bySkus: LanguageAwareHydrater;\n    };\n    orderFetcher: ReturnType<typeof createOrderFetcher>;\n};\n\nfunction useCrystallize(): {\n    helpers: helpers;\n    apiClient: ClientInterface;\n    state: State;\n    dispatch: Actions;\n} {\n    const actions = mapToReducerActions(useCrystallizeDispatch());\n    const state = useCrystallizeState();\n\n    const apiClient = createClient({\n        tenantIdentifier: state.configuration.tenantIdentifier,\n    });\n\n    const helpers: helpers = React.useMemo(() => {\n        return {\n            catalogueFetcher: createCatalogueFetcher(apiClient),\n            navigationFetcher: {\n                byFolders: (\n                    path: string,\n                    depth: number = 1,\n                    extraQuery?: any,\n                    perLevel?: (currentLevel: number) => any,\n                ) => createNavigationFetcher(apiClient).byFolders(path, state.language, depth, extraQuery, perLevel),\n                byTopics: (\n                    path: string,\n                    depth: number = 1,\n                    extraQuery?: any,\n                    perLevel?: (currentLevel: number) => any,\n                ) => createNavigationFetcher(apiClient).byTopics(path, state.language, depth, extraQuery, perLevel),\n            },\n            productHydrater: {\n                byPaths: (paths: string[], extraQuery?: any, perProduct?: (item: string, index: number) => any) =>\n                    createProductHydrater(apiClient).byPaths(paths, state.language, extraQuery, perProduct),\n                bySkus: (skus: string[], extraQuery?: any, perProduct?: (item: string, index: number) => any) =>\n                    createProductHydrater(apiClient).bySkus(skus, state.language, extraQuery, perProduct),\n            },\n            orderFetcher: createOrderFetcher(apiClient),\n        };\n    }, [apiClient, state.language]);\n    return {\n        helpers,\n        apiClient,\n        state,\n        dispatch: actions,\n    };\n}\n\nexport { CrystallizeProvider, useCrystallize };\n", "const fetchResult = async (url: RequestInfo, init?: RequestInit): Promise<any> => {\n    const response = await fetch(url, {\n        credentials: 'include',\n        headers: {\n            'Content-type': 'application/json; charset=UTF-8',\n            Accept: 'application/json',\n        },\n        ...init,\n    });\n\n    if (!response.ok) {\n        throw new Error(`Could not fetch ${url}. Response NOT OK.`);\n    }\n    const json = await response.json();\n    if (json.errors) {\n        throw new Error(`Could not fetch ${url}. Response contains errors.`);\n    }\n    return json;\n};\n\nconst jsonRequest = async <T>(input: RequestInfo, method: string, init?: RequestInit): Promise<T> => {\n    return fetchResult(input, {\n        method: method,\n        ...init,\n    });\n};\n\nexport const getJson = async <T>(input: RequestInfo, init?: RequestInit): Promise<T> => jsonRequest(input, 'GET', init);\n\nexport const postJson = async <T>(input: RequestInfo, body: any, init?: RequestInit): Promise<T> =>\n    jsonRequest(input, 'POST', {\n        body: JSON.stringify(body),\n        ...init,\n    });\n\nexport const useFetchResult = () => {\n    const abortController = new AbortController();\n    const abort = () => {\n        abortController.abort();\n    };\n\n    const signalInit = {\n        signal: abortController.signal,\n    };\n\n    const get = async <T>(url: string, init?: RequestInit): Promise<T> => {\n        return await getJson(url, {\n            ...signalInit,\n            ...init,\n        });\n    };\n\n    const post = async <T>(url: string, body: any, init?: RequestInit): Promise<T> => {\n        return await postJson(url, body, {\n            ...signalInit,\n            ...init,\n        });\n    };\n\n    return { get, post, abort };\n};\n", "import { useEffect, useState, ReactElement } from 'react';\nlet hydrating = true;\nexport function useHydrated() {\n    let [hydrated, setHydrated] = useState(() => !hydrating);\n\n    useEffect(() => {\n        hydrating = false;\n        setHydrated(true);\n    }, []);\n\n    return hydrated;\n}\nexport const ClientOnly: React.FC<{ children: ReactElement<any, any>; fallback?: ReactElement<any, any> }> = ({\n    children,\n    fallback = null,\n}) => {\n    const hydrated = useHydrated();\n    if (hydrated) {\n        return children;\n    }\n    return fallback;\n};\n", "export * from './core/MainProvider/MainProvider';\nexport * from './core/MainProvider/Reducer';\nexport * from './core/hooks/useFetch';\nexport * from './core/hooks/useHydrated';\n"],
  "mappings": "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",
  "names": []
}
