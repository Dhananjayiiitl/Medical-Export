{
  "version": 3,
  "sources": ["../../../../src/routes/$langstore/orders.tsx", "../../../../src/ui/pages/Orders.tsx"],
  "sourcesContent": ["import { HeadersFunction, LoaderFunction } from '@remix-run/node';\nimport { HttpCacheHeaderTaggerFromLoader } from '~/use-cases/http/cache';\nimport { useLoaderData } from '@remix-run/react';\nimport { isAuthenticated as isServerSideAuthenticated } from '~/core/authentication.server';\nimport { privateJson } from '~/core/bridge/privateJson.server';\nimport Orders from '~/ui/pages/Orders';\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n    return privateJson({ isServerSideAuthenticated: await isServerSideAuthenticated(request) });\n};\n\nexport default () => {\n    const { isServerSideAuthenticated } = useLoaderData();\n    return <Orders isServerSideAuthenticated={isServerSideAuthenticated} />;\n};\n", "import { useEffect, useState } from 'react';\nimport { MagickLoginForm } from '../components/checkout-forms/magicklogin';\nimport { useAuth } from '../hooks/useAuth';\nimport { ServiceAPI } from '~/use-cases/service-api';\nimport { Price } from '../lib/pricing/pricing-component';\nimport DefaultImage from '~/assets/defaultImage.svg';\nimport { useAppContext } from '../app-context/provider';\nimport { ClientOnly } from '@crystallize/reactjs-hooks';\nimport DownloadIcon from '~/assets/downloadIcon.svg';\n\nexport default ({ isServerSideAuthenticated }: { isServerSideAuthenticated: boolean }) => {\n    const { isAuthenticated } = useAuth();\n    const [orders, setOrders] = useState<any | null>(null);\n    const { state } = useAppContext();\n\n    let orderDate = (date: any) => {\n        let newDate = new Date(date);\n        return newDate.toLocaleString('en-US', { year: 'numeric', month: 'long', day: 'numeric' });\n    };\n\n    useEffect(() => {\n        (async () => {\n            try {\n                setOrders(\n                    await ServiceAPI({ language: state.language, serviceApiUrl: state.serviceApiUrl }).fetchOrders(),\n                );\n            } catch (exception) {\n                console.log(exception);\n            }\n        })();\n    }, []);\n\n    return (\n        <div className=\"container 2xl px-6 mx-auto w-full\">\n            <h1 className=\"text-2xl font-semibold my-10\">Your Orders</h1>\n            <ClientOnly>\n                {isAuthenticated && isServerSideAuthenticated ? (\n                    <>\n                        <div>\n                            {orders &&\n                                orders.map((order: any, index: number) => (\n                                    <div key={order.id} className=\"border-2 border-grey my-5\">\n                                        <div className=\"w-full h-30 bg-[#F0F2F2] px-5 py-2 flex flex-wrap justify-between items-center\">\n                                            <div className=\"order-item\">\n                                                <span>Order placed</span>\n                                                <p className=\"text-grey6\">{orderDate(order.createdAt)}</p>\n                                            </div>\n                                            <div className=\"order-item\">\n                                                <span>Order ID</span>\n                                                <p className=\"text-grey6\">{order.id}</p>\n                                            </div>\n                                            <div className=\"order-item\">\n                                                <span>Total</span>\n                                                <p className=\"text-grey6\">\n                                                    <Price currencyCode={order.total.currency}>\n                                                        {order.total.gross}\n                                                    </Price>\n                                                </p>\n                                            </div>\n                                        </div>\n                                        <div className=\"p-5 flex flex-col gap-5\">\n                                            {order.cart.map((item: any, index: number) => (\n                                                <div\n                                                    key={index}\n                                                    className=\"flex justify-between items-center order-item\"\n                                                >\n                                                    <div className=\"flex gap-3 items-center\">\n                                                        <img\n                                                            src={item.imageUrl ? item.imageUrl : DefaultImage}\n                                                            width=\"40px\"\n                                                            height=\"40px\"\n                                                            alt=\"product\"\n                                                        />\n                                                        <p className=\"w-40\">{item.name}</p>\n                                                    </div>\n                                                    <p className=\"w-20\">{item.quantity}</p>\n                                                    <p className=\"w-20 text-right\">\n                                                        {/* adding because orders aren't returning currency, will be fixed */}\n                                                        <Price\n                                                            currencyCode={\n                                                                item.price.currency || state.currency.code || 'USD'\n                                                            }\n                                                        >\n                                                            {item.price.gross}\n                                                        </Price>\n                                                    </p>\n                                                </div>\n                                            ))}\n                                        </div>\n                                        <div className=\"w-full flex justify-end\">\n                                            <div className=\"bg-textBlack py-3 px-4 text-[#fff] rounded-sm flex align-center gap-3\">\n                                                <a href={`/order/invoice/${order.id}.pdf`}>Download invoice</a>\n                                                <img\n                                                    src={`${DownloadIcon}`}\n                                                    alt=\"Download icon\"\n                                                    width=\"18\"\n                                                    height=\"18\"\n                                                />\n                                            </div>\n                                        </div>\n                                    </div>\n                                ))}\n                        </div>\n                    </>\n                ) : (\n                    <div className=\"min-h-[70vh] items-center justify-center flex max-w-[500px] mx-auto\">\n                        <div className=\"mx-auto items-center justify-center flex w-full \">\n                            <MagickLoginForm title=\"Login\" onlyLogin actionTitle=\"Login\" />\n                        </div>\n                    </div>\n                )}\n            </ClientOnly>\n        </div>\n    );\n};\n"],
  "mappings": "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",
  "names": ["isServerSideAuthenticated", "index", "import_jsx_dev_runtime", "isServerSideAuthenticated"]
}
