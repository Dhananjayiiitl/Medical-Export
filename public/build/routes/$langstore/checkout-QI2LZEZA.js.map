{
  "version": 3,
  "sources": ["../../../../src/routes/$langstore/checkout.tsx", "../../../../src/ui/pages/Checkout.tsx", "../../../../src/ui/components/checkout-forms/cart.tsx"],
  "sourcesContent": ["import { HttpCacheHeaderTaggerFromLoader } from '~/use-cases/http/cache';\nimport { HeadersFunction, LoaderFunction } from '@remix-run/node';\nimport { isAuthenticated as isServerSideAuthenticated } from '~/core/authentication.server';\nimport { useLoaderData } from '@remix-run/react';\nimport { privateJson } from '~/core/bridge/privateJson.server';\nimport Checkout from '~/ui/pages/Checkout';\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport const loader: LoaderFunction = async ({ request }) => {\n    return privateJson({ isServerSideAuthenticated: await isServerSideAuthenticated(request) });\n};\n\nexport default () => {\n    const { isServerSideAuthenticated } = useLoaderData();\n    return <Checkout isServerSideAuthenticated={isServerSideAuthenticated} />;\n};\n", "import { ClientOnly } from '@crystallize/reactjs-hooks';\nimport { useState } from 'react';\nimport { AddressForm } from '../components/checkout-forms/address';\nimport { CheckoutCart } from '../components/checkout-forms/cart';\nimport { MagickLoginForm } from '../components/checkout-forms/magicklogin';\nimport { Payments } from '../components/payments';\nimport { useAuth } from '../hooks/useAuth';\n\nexport default ({ isServerSideAuthenticated }: { isServerSideAuthenticated: boolean }) => {\n    const { isAuthenticated } = useAuth();\n    const [isGuestCheckout, setIsGuestCheckout] = useState(false);\n    const [showPayments, setShowPayments] = useState(false);\n    return (\n        <div className=\"2xl lg:container lg:px-6 px-2 mx-auto min-h-[100vh]\">\n            <div className=\"flex gap-20 lg:flex-row flex-col\">\n                <CheckoutCart />\n                <div className=\"rounded pt-5 lg:px-10 lg:w-3/5 w-full px-3\">\n                    {/* <ClientOnly>\n                        {(() => {\n                            if (!isServerSideAuthenticated || !isAuthenticated) {\n                                return isGuestCheckout ? (\n                                    <>\n                                        <AddressForm\n                                            title=\"Guest Checkout\"\n                                            onValidSubmit={() => setShowPayments(true)}\n                                        />\n                                        {showPayments && <Payments />}\n                                    </>\n                                ) : (\n                                    <MagickLoginForm\n                                        enabledGuest={() => setIsGuestCheckout(true)}\n                                        actionTitle=\"Register\"\n                                        title=\"Register or continue as guest?\"\n                                    />\n                                );\n                            }\n                            return (\n                                <>\n                                    <AddressForm title=\"Address\" onValidSubmit={() => setShowPayments(true)} />\n                                    {showPayments && <Payments />}\n                                </>\n                            );\n                        })()}\n                    </ClientOnly> */}\n                    \n                </div>\n            </div>\n        </div>\n    );\n};\n", "import { useRemoteCart } from '../../hooks/useRemoteCart';\nimport { Image } from '@crystallize/reactjs-components/dist/image';\nimport { useAppContext } from '../../app-context/provider';\nimport { Price } from '../../lib/pricing/pricing-component';\nimport { CartItemPrice } from '../price';\nimport { useLocalCart } from '../../hooks/useLocalCart';\nimport { Price as CrystallizePrice } from '../../lib/pricing/pricing-component';\nimport { ClientOnly } from '@crystallize/reactjs-hooks';\n\nexport const CheckoutCart: React.FC = () => {\n    const { remoteCart } = useRemoteCart();\n    const { cart, total } = remoteCart?.cart || { cart: null, total: null };\n    const { savings } = remoteCart?.extra?.discounts || { lots: null, savings: null };\n    const { state: contextState, _t } = useAppContext();\n    return (\n        <div className=\"lg:w-2/5 w-full\">\n            <h1 className=\"font-bold text-2xl mt-10 mb-5\">{_t('cart.yourCart')}</h1>\n            {!cart && <OptimisticHydratedCart />}\n            {cart &&\n                cart.items.map((item: any, index: number) => {\n                    const saving = savings[item.variant.sku]?.quantity > 0 ? savings[item.variant.sku] : null;\n                    return (\n                        <div\n                            key={index}\n                            className=\"mt-2 min-h-[60px] rounded-md flex justify-between bg-grey2 p-2 items-center\"\n                        >\n                            <div className=\"flex cart-item gap-3 items-center\">\n                                <div className=\"img-container img-contain w-[60px] h-[60px]\">\n                                    <Image\n                                        {...item?.variant.firstImage}\n                                        sizes=\"100px\"\n                                        fallbackAlt={item.variant.name}\n                                    />\n                                </div>\n                                <div className=\"flex flex-col\">\n                                    <p className=\"text-md font-regular w-full\">\n                                        {item.variant.name} x {item.quantity}\n                                    </p>\n                                    <CartItemPrice item={item} saving={saving} />\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n            {total && (\n                <div className=\"flex flex-col gap-1  py-4 items-end\">\n                    <div className=\"flex text-grey3 text-sm justify-between w-60\">\n                        <p>{_t('cart.discount')}</p>\n                        <p>\n                            <Price currencyCode={contextState.currency.code}>\n                                {total.discounts.reduce((memo: number, discount: any) => {\n                                    return memo + discount?.amount || 0;\n                                }, 0)}\n                            </Price>\n                        </p>\n                    </div>\n                    <div className=\"flex text-grey3 text-sm justify-between w-60\">\n                        <p>{_t('cart.taxAmount')}</p>\n                        <p>\n                            <Price currencyCode={contextState.currency.code}>{total.taxAmount}</Price>\n                        </p>\n                    </div>\n                    <div className=\"flex font-bold mt-2 text-lg justify-between w-60\">\n                        <p>{_t('cart.toPay')}</p>\n                        <p>\n                            <Price currencyCode={contextState.currency.code}>{total.gross}</Price>\n                        </p>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport const OptimisticHydratedCart: React.FC = () => {\n    const { cart: cart } = useLocalCart();\n    const { state: contextState, _t } = useAppContext();\n    let total = 0;\n    return (\n        <ClientOnly>\n            <>\n                {Object.keys(cart.items).map((sku: string, index: number) => {\n                    const item = cart.items[sku as keyof typeof cart];\n                    total += item.quantity * item.price;\n                    return (\n                        <div\n                            key={index}\n                            className=\"mt-2 min-h-[60px] rounded-md flex justify-between bg-grey2 p-2 items-center\"\n                        >\n                            <div className=\"flex cart-item gap-3 items-center\">\n                                <div className=\"img-container img-contain w-[60px] h-[60px]\">\n                                    <Image />\n                                </div>\n                                <div className=\"flex flex-col\">\n                                    <p className=\"text-md font-regular w-full\">{item.name}</p>\n                                    <CrystallizePrice currencyCode={contextState.currency.code}>\n                                        {item.price}\n                                    </CrystallizePrice>\n                                </div>\n                            </div>\n                        </div>\n                    );\n                })}\n                <div className=\"flex flex-col gap-1  py-4 items-end\">\n                    <div className=\"flex text-grey3 text-sm justify-between w-60\">\n                        <p>{_t('cart.discount')}</p>\n                        <div className=\"loader\" />\n                    </div>\n                    <div className=\"flex text-grey3 text-sm justify-between w-60\">\n                        <p>{_t('cart.taxAmount')}</p>\n                        <div className=\"loader\" />\n                    </div>\n                    <div className=\"flex font-bold mt-2 text-lg justify-between w-60\">\n                        <p>{_t('cart.toPay')}</p>\n                        <p>\n                            <CrystallizePrice currencyCode={contextState.currency.code}>{total}</CrystallizePrice>\n                        </p>\n                    </div>\n                </div>\n            </>\n        </ClientOnly>\n    );\n};\n"],
  "mappings": "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",
  "names": ["_a", "import_jsx_dev_runtime", "isServerSideAuthenticated", "import_jsx_dev_runtime", "isServerSideAuthenticated"]
}
