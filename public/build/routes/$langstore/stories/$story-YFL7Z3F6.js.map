{
  "version": 3,
  "sources": ["../../../../../src/routes/$langstore/stories/$story.tsx", "../../../../../src/ui/pages/CuratedStory.tsx", "../../../../../src/ui/components/curated-product-item.tsx", "../../../../../src/ui/pages/Story.tsx", "../../../../../src/ui/components/related-document.tsx", "../../../../../src/ui/pages/AbstractStory.tsx"],
  "sourcesContent": ["import { HttpCacheHeaderTaggerFromLoader, StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport { HeadersFunction, json, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { getStoreFront } from '~/core/storefront.server';\nimport { buildMetas } from '~/use-cases/MicrodataBuilder';\nimport { getContext } from '~/use-cases/http/utils';\nimport AbstractStory from '~/ui/pages/AbstractStory';\nimport dataFetcherForShapePage from '~/core/dataFetcherForShapePage.server';\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport let meta: MetaFunction = ({ data }) => {\n    return buildMetas(data);\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const path = `/stories/${params.story}`;\n    const { shared } = await getStoreFront(requestContext.host);\n    const data = await dataFetcherForShapePage('abstract-story', path, requestContext, params);\n    return json({ data }, StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', [path], shared.config.tenantIdentifier));\n};\n\nexport default () => {\n    const { data } = useLoaderData();\n    return <AbstractStory data={data} />;\n};\n", "import { ContentTransformer, Image } from '@crystallize/reactjs-components';\nimport { CuratedProductItem } from '../components/curated-product-item';\nimport { useMemo, useState } from 'react';\nimport { AddToCartBtn, VariantPack, VariantPackItem } from '../components/add-to-cart-button';\nimport { useAppContext } from '../app-context/provider';\nimport { CuratedStory } from '../../use-cases/contracts/Story';\nimport { ParagraphCollection } from '../components/crystallize-components/paragraph-collection';\nimport { Price } from '../lib/pricing/pricing-component';\n\nexport default ({ data: story }: { data: CuratedStory }) => {\n    const [activePoint, setActivePoint] = useState('');\n    const { state: appContextState } = useAppContext();\n    // construct the defaut pack from merch.products with quanity 1\n    const defaultPack = useMemo(\n        () =>\n            story.merchandising.reduce((memo: VariantPack, merch, merchIndex) => {\n                merch.products.forEach((product, productIndex) => {\n                    memo.push({\n                        variant: product.variant,\n                        quantity: 1,\n                        key: `${merchIndex}-${productIndex}`,\n                    });\n                });\n                return memo;\n            }, []),\n        [story.merchandising],\n    );\n\n    const [pack, setPack] = useState<VariantPack>(defaultPack);\n    const totalAmountToPay = pack.reduce((memo: number, packitem: VariantPackItem) => {\n        const price = packitem.variant.priceVariants?.sales?.value || packitem.variant.priceVariants?.default?.value;\n        return memo + (price || 0) * packitem.quantity;\n    }, 0);\n\n    const updatePack = (previous: VariantPackItem, next: VariantPackItem) => {\n        setPack(\n            pack.map((packitem: VariantPackItem) => {\n                if (previous.key === packitem.key) {\n                    // we got to preserve the key\n                    return {\n                        ...packitem,\n                        quantity: next.quantity,\n                        variant: next.variant,\n                    };\n                }\n                return packitem;\n            }),\n        );\n    };\n    return (\n        <div className=\"flex flex-col-reverse lg:flex-row gap-8 min-h-full container px-6 mx-auto mt-20 mb-40\">\n            <div className=\"lg:w-7/12\">\n                <div className=\"img-container overflow-hidden self-start rounded-lg relative\">\n                    <div className=\"absolute h-full w-full frntr-hotspot frntr-hotspot-microformat\">\n                        {story.merchandising.map((merch, i) => (\n                            <span\n                                onMouseOver={() => setActivePoint(`hotspot-point-${i}`)}\n                                onMouseLeave={() => setActivePoint('')}\n                                key={`hotspot-${merch.x}-${merch.y}`}\n                                style={{ left: merch.x + `%`, top: merch.y + '%' }}\n                            >\n                                <div className=\"rounded-sm overflow-hidden shadow-sm px-2 pt-2 \">\n                                    {merch.products.map((product, index) => (\n                                        <div className=\"flex items-center gap-2 pb-2\" key={index}>\n                                            <div className=\"img-container img-cover w-[30px] h-[40px]\">\n                                                <Image\n                                                    {...product.variant.images?.[0]}\n                                                    sizes=\"100px\"\n                                                    loading=\"lazy\"\n                                                    fallbackAlt={product.name}\n                                                />\n                                            </div>\n                                            <div>\n                                                <div className=\"text-xs\">{product.name}</div>\n                                                <div className=\"text-xs font-bold\">\n                                                    {appContextState.currency.code}{' '}\n                                                    {product.variant.priceVariants.default.value}\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            </span>\n                        ))}\n                    </div>\n                    <Image {...story?.medias?.images?.[0]} sizes=\"50vw\" fallbackAlt={story.title} />\n                </div>\n                <div className=\"max-w-[1000px] \">{story.story && <ParagraphCollection paragraphs={story.story} />}</div>\n            </div>\n\n            <div className=\"px-6 lg:w-5/12\">\n                <h1 className=\"text-3xl font-semibold mb-2\">{story.title}</h1>\n                <div className=\"border-b pb-4 mb-4 border-[#dfdfdf] text-1xl leading-[1.4em] mb-5\">\n                    <ContentTransformer json={story.description?.json} />\n                </div>\n                <div className=\"sticky top-20\">\n                    {story.merchandising.map((merch, merchIndex) => {\n                        return (\n                            <div\n                                key={`merch-container-${merch.x}-${merch.y}`}\n                                className=\"px-2 overflow-hidden rounded-md my-2\"\n                                style={{\n                                    border:\n                                        activePoint === `hotspot-point-${merchIndex}`\n                                            ? '1px solid #000'\n                                            : '1px solid transparent',\n                                }}\n                            >\n                                <CuratedProductItem\n                                    merch={merch}\n                                    updatePack={updatePack}\n                                    pack={pack}\n                                    merchIndex={merchIndex}\n                                />\n                            </div>\n                        );\n                    })}\n                    <div className=\"flex pt-5 mt-5 items-center justify-between\">\n                        <div className=\"text-2xl font-bold text-green2\">\n                            <Price currencyCode={appContextState.currency.code}>{totalAmountToPay}</Price>\n                        </div>\n                        <AddToCartBtn pack={pack} />\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n", "import { Product, ProductVariant } from '@crystallize/js-api-client';\nimport { Image } from '@crystallize/reactjs-components';\nimport { Price } from '../components/price';\nimport { VariantSelector } from './variant-selector';\nimport { ProductSlim } from '~/use-cases/contracts/Product';\nimport { ProductListHostpot } from '~/use-cases/contracts/ProductListHostpot';\nimport { VariantPack, VariantPackItem } from './add-to-cart-button';\n\nexport const CuratedProductItem: React.FC<{\n    merch: ProductListHostpot;\n    merchIndex: number;\n    pack: VariantPack;\n    updatePack: Function;\n}> = ({ merch, pack, merchIndex, updatePack }) => {\n    return (\n        <>\n            {merch.products.map((product, productIndex) => (\n                <Product\n                    product={product}\n                    pack={pack}\n                    key={productIndex}\n                    updatePack={updatePack}\n                    packKey={`${merchIndex}-${productIndex}`}\n                />\n            ))}\n        </>\n    );\n};\n\nconst Product = ({\n    product,\n    pack,\n    updatePack,\n    packKey,\n}: {\n    product: ProductSlim;\n    pack: VariantPack;\n    updatePack: Function;\n    packKey: string;\n}) => {\n    if (!product?.variants) {\n        return null;\n    }\n\n    const selecedPackItem: VariantPackItem = pack.find((packItem: VariantPackItem) => packItem.key === packKey) || {\n        variant: product.variants[0],\n        quantity: 1,\n    };\n    if (!selecedPackItem) {\n        return null;\n    }\n\n    return (\n        <>\n            <div className=\"border-b border-[#dfdfdf] w-full py-3 \">\n                <div className=\"grid w-full grid-cols-[0.35fr_1fr]\">\n                    <div className=\"w-full img-container overflow-hidden rounded-md\">\n                        <Image\n                            sizes=\"200px\"\n                            {...selecedPackItem.variant?.images?.[0]}\n                            fallbackAlt={selecedPackItem.variant.name}\n                        />\n                    </div>\n                    <div>\n                        <div className=\"gap-2 pl-4 flex \">\n                            <div className=\" w-full\">\n                                <div className=\"pb-1\">{selecedPackItem.variant.name}</div>\n                                <Price variant={selecedPackItem.variant} size=\"small\" />\n                            </div>\n                            <div className=\"flex flex-col-reverse max-w-[40px] w-full items-center justify-end \">\n                                <button\n                                    className=\"py-1 w-full block text-sm rounded-md border-transparent hover:bg-[#efefef]\"\n                                    onClick={() =>\n                                        updatePack(selecedPackItem, {\n                                            ...selecedPackItem,\n                                            quantity: selecedPackItem.quantity - 1,\n                                        })\n                                    }\n                                >\n                                    -\n                                </button>\n                                <input\n                                    value={selecedPackItem.quantity}\n                                    type=\"text\"\n                                    className=\"py-2  w-full w-full text-sm text-center hover:bg-[#efefef] active:bg-[#efefef]\"\n                                    onChange={(e) =>\n                                        updatePack(selecedPackItem, {\n                                            ...selecedPackItem,\n                                            quantity: parseInt(e.target.value),\n                                        })\n                                    }\n                                />\n                                <button\n                                    className=\"py-1 w-full block text-sm rounded-md border-transparent hover:bg-[#efefef]\"\n                                    onClick={() =>\n                                        updatePack(selecedPackItem, {\n                                            ...selecedPackItem,\n                                            quantity: selecedPackItem.quantity + 1,\n                                        })\n                                    }\n                                >\n                                    +\n                                </button>\n                            </div>\n                        </div>\n                        <div className=\"pl-4 mt-2 max-w-[100%]\">\n                            <div className=\"grid grid-cols-1 grid-col-2 lg:grid-cols-1 xl:grid-cols-2 gap-2\">\n                                <VariantSelector\n                                    variants={product.variants}\n                                    selectedVariant={selecedPackItem.variant}\n                                    onVariantChange={(variant: ProductVariant) => {\n                                        updatePack(selecedPackItem, {\n                                            variant,\n                                            quantity: selecedPackItem.quantity,\n                                        });\n                                    }}\n                                    renderingType=\"dropdown\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n};\n", "import { ContentTransformer, Image } from '@crystallize/reactjs-components';\nimport { ParagraphCollection } from '../components/crystallize-components/paragraph-collection';\nimport { RelatedDocument } from '../components/related-document';\nimport { Product } from '../components/item/product';\nimport { Story } from '../../use-cases/contracts/Story';\nimport { buildSchemaMarkupForBlogPost } from '~/use-cases/SchemaMarkupBuilder';\n\nexport default ({ data: story }: { data: Story }) => {\n    return (\n        <>\n            <script\n                type=\"application/ld+json\"\n                dangerouslySetInnerHTML={{\n                    __html: JSON.stringify(buildSchemaMarkupForBlogPost(story)),\n                }}\n            />\n            <div className=\"2xl md:container md:px-6 px-4 mx-auto mt-20 mb-20\">\n                <div className=\"max-w-[1000px]\">\n                    <p className=\"mb-4 text-md\">\n                        {new Date(story.createdAt).toLocaleString('en-US', {\n                            year: 'numeric',\n                            month: 'long',\n                            day: 'numeric',\n                        })}\n                    </p>\n                    <h1 className=\"text-6xl font-semibold mb-2\">{story.title}</h1>\n                    <div className=\"md:w-3/4 w-full my-2 text-2xl leading-[1.8em]\">\n                        <ContentTransformer json={story.description.json} />\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"container 2xl mt-5 w-screen mx-auto\">\n                <div className=\"max-w-[1200px] img-container overflow-hidden rounded-lg\">\n                    <Image {...story.medias?.images?.[0]} sizes=\"100vw\" fallbackAlt={story.title} />\n                </div>\n            </div>\n\n            <div className=\"2xl container mx-auto frntr-story \">\n                <div className=\"max-w-[1000px] \">{story.story && <ParagraphCollection paragraphs={story.story} />}</div>\n            </div>\n            {story.relatedArticles && (\n                <div className=\"2xl container px-6 mx-auto w-full mt-10\">\n                    <h3 className=\"font-bold mt-40 mb-4 text-xl\">Read next</h3>\n                    <div className=\"gap-5 lg:grid grid-cols-5 pb-5 flex flex-wrapl\">\n                        {story.relatedArticles?.map((item: any, index: number) => (\n                            <div key={index}>\n                                <RelatedDocument document={item} />\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n            {story.featuredProducts && (\n                <div className=\"2xl container px-6 mx-auto w-full mt-10\">\n                    <h3 className=\"font-bold mt-20 mb-4 text-xl\">Featured products</h3>\n                    <div className=\"gap-5 lg:grid grid-cols-5 pb-5 flex flex-wrap\">\n                        {story.featuredProducts?.map((item: any, index: number) => {\n                            return <Product item={item} key={index} />;\n                        })}\n                    </div>\n                </div>\n            )}\n        </>\n    );\n};\n", "import Link from '../bridge/Link';\nimport { Image } from '@crystallize/reactjs-components/dist/image';\nimport { useAppContext } from '../app-context/provider';\n\nexport const RelatedDocument = ({ document }: { document: any }) => {\n    const { path } = useAppContext();\n    let title = document.components.find((component: any) => component.name === 'Title')?.content?.text;\n    let media = document.components.find((component: any) => component.name === 'Media')?.content?.selectedComponent\n        ?.content;\n    return (\n        <div className=\"pb-5 img-cover-hover\">\n            <Link to={path(document.path)}>\n                <div className=\"img-container img-cover rounded-md overflow-hidden\">\n                    <Image {...media?.images?.[0]} sizes=\"200px\" loading=\"lazy\" fallbackAlt={title} />\n                </div>\n                <h4 className=\"font-semibold mt-5\">{title}</h4>\n            </Link>\n        </div>\n    );\n};\n", "import { CuratedStory as CuratedStoryType, Story as StoryType } from '~/use-cases/contracts/Story';\nimport CuratedStory from './CuratedStory';\nimport Story from './Story';\n\nexport default ({ data: story }: { data: CuratedStoryType | StoryType }) => {\n    if (story.type === 'curated-product-story') {\n        return <CuratedStory data={story} />;\n    }\n    if (story.type === 'story') {\n        return <Story data={story} />;\n    }\n    return <div> No renderer for type</div>;\n};\n"],
  "mappings": "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",
  "names": ["import_reactjs_components", "Product", "Price", "import_jsx_dev_runtime", "_a", "_b", "_c", "import_reactjs_components", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime"]
}
