{
  "version": 3,
  "sources": ["../../../../src/routes/$langstore/$.tsx", "../../../../src/ui/pages/Topic.tsx"],
  "sourcesContent": ["import { HeadersFunction, json, LoaderFunction, MetaFunction, Response } from '@remix-run/node';\nimport { HttpCacheHeaderTaggerFromLoader, StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport { getContext } from '~/use-cases/http/utils';\nimport { getStoreFront } from '~/core/storefront.server';\nimport { CrystallizeAPI } from '~/use-cases/crystallize/read';\nimport { useLoaderData } from '@remix-run/react';\nimport { buildMetas } from '~/use-cases/MicrodataBuilder';\nimport Product from '~/ui/pages/Product';\nimport Category from '~/ui/pages/Category';\nimport AbstractStory from '~/ui/pages/AbstractStory';\nimport Topic from '~/ui/pages/Topic';\nimport LandingPage from '~/ui/pages/LandingPage';\nimport dataFetcherForShapePage from '~/core/dataFetcherForShapePage.server';\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport let meta: MetaFunction = ({ data }) => {\n    return buildMetas(data);\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const { shared, secret } = await getStoreFront(requestContext.host);\n    const path = '/shop' + params['*'];\n    const crystallizePath = path.replace('.pdf', '');\n    const api = CrystallizeAPI({\n        apiClient: secret.apiClient,\n        language: requestContext.language,\n        isPreview: requestContext.isPreview,\n    });\n    const map = await api.fetchTreeMap();\n    const mappedKey = Object.keys(map).find((key: string) => key === crystallizePath);\n    if (!mappedKey) {\n        throw new Response('Not Found', {\n            status: 404,\n        });\n    }\n\n    const shapeIdentifier = map[mappedKey as keyof typeof map]?.shape?.identifier || '_topic';\n    const data = await dataFetcherForShapePage(shapeIdentifier, path, requestContext, params);\n\n    return json(\n        { shapeIdentifier, data },\n        StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', [path], shared.config.tenantIdentifier),\n    );\n};\n\nexport default () => {\n    const { data, shapeIdentifier } = useLoaderData();\n    console.log(landin)\n    switch (shapeIdentifier) {\n        case 'product':\n            return <Product data={data} />;\n        case 'category':\n            return <Category data={data} />;\n        case 'abstract-story':\n            return <AbstractStory data={data} />;\n        case '_topic':\n            return <Topic data={data} />;\n        case 'landing-page':\n            return <LandingPage data={data} />;\n        default:\n            return <p>There is no renderer for that page</p>;\n    }\n    return <h1>hello</h1>\n};  \n", "import { FilteredProducts } from '../components/search/filtered-products';\nimport { SearchByTopicsProductList } from '../../use-cases/contracts/Product';\nimport { Topic } from '../../use-cases/contracts/Topic';\n\nexport default ({ data }: { data: SearchByTopicsProductList & { topic?: Topic } }) => {\n    const { products, topics, topic } = data;\n    let topicName = topic?.name || topic?.path;\n    return (\n        <div className=\"container 2xl mx-auto px-6 mt-10\">\n            <h1 className=\"capitalize font-bold text-4xl\">{topicName}</h1>\n            <FilteredProducts products={products} />\n        </div>\n    );\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA,wBAA8B;;;ACMlB;AALZ,IAAO,gBAAQ,CAAC,EAAE,KAAK,MAA+D;AAClF,QAAM,EAAE,UAAU,QAAQ,MAAM,IAAI;AACpC,MAAI,aAAY,+BAAO,UAAQ,+BAAO;AACtC,SACI,mDAAC,SAAI,WAAU,oCACX;AAAA,uDAAC,QAAG,WAAU,iCAAiC,uBAA/C;AAAA;AAAA;AAAA;AAAA,WAAyD;AAAA,IACzD,mDAAC,oBAAiB,YAAlB;AAAA;AAAA;AAAA;AAAA,WAAsC;AAAA,OAF1C;AAAA;AAAA;AAAA;AAAA,SAGA;AAER;;;ADDA,qCAAoC;AA0CjB,IAAAA,0BAAA;AApCZ,IAAI,OAAqB,CAAC,EAAE,KAAK,MAAM;AAC1C,SAAO,WAAW,IAAI;AAC1B;AA6BA,IAAO,YAAQ,MAAM;AACjB,QAAM,EAAE,MAAM,gBAAgB,IAAI,cAAc;AAChD,UAAQ,IAAI,MAAM;AAClB,UAAQ,iBAAiB;AAAA,IACrB,KAAK;AACD,aAAO,oDAAC,mBAAQ,QAAT;AAAA;AAAA;AAAA;AAAA,aAAqB;AAAA,IAChC,KAAK;AACD,aAAO,oDAAC,oBAAS,QAAV;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA,IACjC,KAAK;AACD,aAAO,oDAAC,yBAAc,QAAf;AAAA;AAAA;AAAA;AAAA,aAA2B;AAAA,IACtC,KAAK;AACD,aAAO,oDAAC,iBAAM,QAAP;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,IAC9B,KAAK;AACD,aAAO,oDAAC,uBAAY,QAAb;AAAA;AAAA;AAAA;AAAA,aAAyB;AAAA,IACpC;AACI,aAAO,oDAAC,OAAE,kDAAH;AAAA;AAAA;AAAA;AAAA,aAAqC;AAAA,EACpD;AACA,SAAO,oDAAC,QAAG,qBAAJ;AAAA;AAAA;AAAA;AAAA,SAAS;AACpB;",
  "names": ["import_jsx_dev_runtime"]
}
