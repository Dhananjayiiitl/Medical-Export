{
  "version": 3,
  "sources": ["../../../../src/routes/$langstore/index.tsx", "../../../../src/ui/pages/LandingPage.tsx"],
  "sourcesContent": ["import { HeadersFunction, json, LinksFunction, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { HttpCacheHeaderTaggerFromLoader, StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport splideStyles from '@splidejs/splide/dist/css/themes/splide-default.min.css';\nimport { useLoaderData } from '@remix-run/react';\nimport { getStoreFront } from '~/core/storefront.server';\nimport { buildMetas } from '~/use-cases/MicrodataBuilder';\nimport { getContext } from '~/use-cases/http/utils';\nimport videoStyles from '@crystallize/reactjs-components/assets/video/styles.css';\nimport LandingPage from '~/ui/pages/LandingPage';\nimport dataFetcherForShapePage from '~/core/dataFetcherForShapePage.server';\n\nexport let meta: MetaFunction = ({ data }) => {\n    return buildMetas(data.data);\n};\n\nexport const headers: HeadersFunction = ({ parentHeaders, loaderHeaders }) => {\n    return {\n        ...HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers,\n        Link: parentHeaders.get('Link') as string,\n    };\n};\n\nexport const links: LinksFunction = () => {\n    return [\n        { rel: 'stylesheet', href: splideStyles },\n        { rel: 'stylesheet', href: videoStyles },\n    ];\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const path = `/frontpage`;\n    const { shared } = await getStoreFront(requestContext.host);\n    const data = await dataFetcherForShapePage('landing-page', path, requestContext, params);\n    return json({ data }, StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', [path], shared.config.tenantIdentifier));\n};\n\nexport default () => {\n    const { data } = useLoaderData();\n    return <LandingPage data={data} />;\n};\n", "import { Shop } from '~/use-cases/contracts/Shop';\nimport { useAppContext } from '../app-context/provider';\nimport { CategoryList } from '../components/category-list';\nimport { Grid } from '../components/grid/grid';\nimport { ContentTransformer } from '@crystallize/reactjs-components';\nimport Link from '../bridge/Link';\n\nexport default ({ shop }: { shop: Shop }) => {\n    const { path, _t } = useAppContext();\n\n    return (\n        <>\n            {shop.hero && (\n                <div className=\"w-full mt-4\">\n                    <Grid grid={shop.hero} />\n                </div>\n            )}\n            <div className=\"2xl container mx-auto px-4 md:px-10\">\n                <div className=\"flex flex-wrap gap-4 pt-20 mb-10  items-center\">\n                    <h2 className=\"font-medium text-md text-md w-full block\">{_t('browse')}</h2>\n                    {shop.categories.map((category) => (\n                        <Link\n                            to={path(category.path)}\n                            prefetch=\"intent\"\n                            className=\"w-auto bg-grey py-2 sm:px-6 px-4 rounded-md sm:text-lg text-md font-bold category-link\"\n                            key={category.name}\n                        >\n                            {category.name}\n                        </Link>\n                    ))}\n                </div>\n                <div>\n                    {shop.categories.map((category) => (\n                        <div className=\"border-t border-[#dfdfdf] py-20\" key={category.path}>\n                            <div className=\"flex  flex-col sm:flex-row sm:items-center justify-between \">\n                                <div className=\"w-3/4 sm:w-2/4 leading-[1.5em]\">\n                                    <h2 className=\"font-bold text-2xl mb-3\">{category.name}</h2>\n                                    <ContentTransformer className=\"leading-1\" json={category.description?.json} />\n                                </div>\n                                <Link\n                                    to={path(category.path)}\n                                    prefetch=\"intent\"\n                                    className=\"w-auto bg-grey py-2 px-6 text-center rounded-md text-md font-bold hover:bg-black hover:text-white mt-6 sm:mt-0\"\n                                    key={category.name}\n                                >\n                                    {_t('view')} {category.name.toLowerCase()}\n                                </Link>\n                            </div>\n                            <CategoryList products={category.products} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </>\n    );\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,wBAA8B;;;ACA9B,gCAAmC;AAO3B;AAJR,IAAO,sBAAQ,CAAC,EAAE,KAAK,MAAsB;AACzC,QAAM,EAAE,MAAM,GAAG,IAAI,cAAc;AAEnC,SACI,sFACK;AAAA,SAAK,QACF,mDAAC,SAAI,WAAU,eACX,6DAAC,QAAK,MAAM,KAAK,QAAjB;AAAA;AAAA;AAAA;AAAA,WAAuB,KAD3B;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IAEJ,mDAAC,SAAI,WAAU,uCACX;AAAA,yDAAC,SAAI,WAAU,kDACX;AAAA,2DAAC,QAAG,WAAU,4CAA4C,aAAG,QAAQ,KAArE;AAAA;AAAA;AAAA;AAAA,eAAuE;AAAA,QACtE,KAAK,WAAW,IAAI,CAAC,aAClB;AAAA,UAAC;AAAA;AAAA,YACG,IAAI,KAAK,SAAS,IAAI;AAAA,YACtB,UAAS;AAAA,YACT,WAAU;AAAA,YAGT,mBAAS;AAAA;AAAA,UAFL,SAAS;AAAA,UAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAOA,CACH;AAAA,WAXL;AAAA;AAAA;AAAA;AAAA,aAYA;AAAA,MACA,mDAAC,SACI,eAAK,WAAW,IAAI,CAAC,aAAU;AAhCpD;AAiCwB,kEAAC,SAAI,WAAU,mCACX;AAAA,6DAAC,SAAI,WAAU,+DACX;AAAA,+DAAC,SAAI,WAAU,kCACX;AAAA,iEAAC,QAAG,WAAU,2BAA2B,mBAAS,QAAlD;AAAA;AAAA;AAAA;AAAA,qBAAuD;AAAA,cACvD,mDAAC,gDAAmB,WAAU,aAAY,OAAM,cAAS,gBAAT,mBAAsB,QAAtE;AAAA;AAAA;AAAA;AAAA,qBAA4E;AAAA,iBAFhF;AAAA;AAAA;AAAA;AAAA,mBAGA;AAAA,YACA;AAAA,cAAC;AAAA;AAAA,gBACG,IAAI,KAAK,SAAS,IAAI;AAAA,gBACtB,UAAS;AAAA,gBACT,WAAU;AAAA,gBAGT;AAAA,qBAAG,MAAM;AAAA,kBAAE;AAAA,kBAAE,SAAS,KAAK,YAAY;AAAA;AAAA;AAAA,cAFnC,SAAS;AAAA,cAJlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAOA;AAAA,eAZJ;AAAA;AAAA;AAAA;AAAA,iBAaA;AAAA,UACA,mDAAC,gBAAa,UAAU,SAAS,YAAjC;AAAA;AAAA;AAAA;AAAA,iBAA2C;AAAA,aAfO,SAAS,MAA/D;AAAA;AAAA;AAAA;AAAA,eAgBA;AAAA,OACH,KAnBL;AAAA;AAAA;AAAA;AAAA,aAoBA;AAAA,SAlCJ;AAAA;AAAA;AAAA;AAAA,WAmCA;AAAA,OAzCJ;AAAA;AAAA;AAAA;AAAA,SA0CA;AAER;;;AD9CA,qCAAoC;AA8BzB,IAAAA,0BAAA;AA5BJ,IAAI,OAAqB,CAAC,EAAE,KAAK,MAAM;AAC1C,SAAO,WAAW,KAAK,IAAI;AAC/B;AASO,IAAM,QAAuB,MAAM;AACtC,SAAO;AAAA,IACH,EAAE,KAAK,cAAc,MAAM,2BAAa;AAAA,IACxC,EAAE,KAAK,cAAc,MAAM,eAAY;AAAA,EAC3C;AACJ;AAUA,IAAO,oBAAQ,MAAM;AACjB,QAAM,EAAE,KAAK,IAAI,cAAc;AAC/B,SAAO,oDAAC,uBAAY,QAAb;AAAA;AAAA;AAAA;AAAA,SAAyB;AACpC;",
  "names": ["import_jsx_dev_runtime"]
}
