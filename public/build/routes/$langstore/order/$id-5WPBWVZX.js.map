{
  "version": 3,
  "sources": ["../../../../../src/routes/$langstore/order/$id.tsx", "../../../../../src/ui/pages/Order.tsx"],
  "sourcesContent": ["import { json, LoaderFunction, HeadersFunction } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { HttpCacheHeaderTaggerFromLoader, StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport { getContext } from '~/use-cases/http/utils';\nimport { getStoreFront } from '~/core/storefront.server';\nimport { isAuthenticated as isServerSideAuthenticated } from '~/core/authentication.server';\nimport Order from '~/ui/pages/Order';\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const { shared } = await getStoreFront(requestContext.host);\n    return json(\n        { orderId: params.id, isServerSideAuthenticated: await isServerSideAuthenticated(request) },\n\n        StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', ['order' + params.id], shared.config.tenantIdentifier),\n    );\n};\n\nexport default () => {\n    const { orderId, isServerSideAuthenticated } = useLoaderData();\n    return <Order id={orderId} isServerSideAuthenticated={isServerSideAuthenticated} />;\n};\n", "import { useEffect, useState } from 'react';\nimport { useAppContext } from '../app-context/provider';\nimport { ServiceAPI } from '~/use-cases/service-api';\nimport { Price } from '../lib/pricing/pricing-component';\nimport { useAuth } from '../hooks/useAuth';\nimport { MagickLoginForm } from '../components/checkout-forms/magicklogin';\nimport { ClientOnly } from '@crystallize/reactjs-hooks';\n\nexport default ({ id, isServerSideAuthenticated }: { id: string; isServerSideAuthenticated: boolean }) => {\n    const [tryCount, setTryCount] = useState(0);\n    const [order, setOrder] = useState<any | null>(null);\n    const { state: contextState } = useAppContext();\n    const { isAuthenticated } = useAuth();\n\n    useEffect(() => {\n        let timeout: ReturnType<typeof setTimeout>;\n        (async () => {\n            try {\n                setOrder(\n                    await ServiceAPI({\n                        language: contextState.language,\n                        serviceApiUrl: contextState.serviceApiUrl,\n                    }).fetchOrder(id),\n                );\n            } catch (exception) {\n                timeout = setTimeout(() => {\n                    setTryCount(tryCount + 1);\n                }, 500 * tryCount);\n            }\n        })();\n        return () => clearTimeout(timeout);\n    }, [id, tryCount]);\n\n    return (\n        <div className=\"min-h-[70vh] items-center flex lg:w-content mx-auto w-full\">\n            <ClientOnly>\n                {order && isAuthenticated && isServerSideAuthenticated ? (\n                    <div className=\"w-3/4 mx-auto\">\n                        <div className=\"mt-10\">\n                            <h1 className=\"font-bold text-3xl\">Order Confirmation</h1>\n                            <p className=\"mt-4\">We've received your order.</p>\n                            <p> The order ID is: #{order.id}.</p>\n                            <div className=\"mt-2\">\n                                {order.cart.map((item: any, index: number) => {\n                                    return (\n                                        <div key={index} className=\"bg-grey2 px-3 py-2 mb-2 gap-2 flex items-center\">\n                                            <div className=\"img-container overflow-hidden rounded-md img-contain w-[50px] h-[70px]\">\n                                                <img src={item.imageUrl} />\n                                            </div>\n                                            <div className=\"flex w-full justify-between\">\n                                                <div>\n                                                    <p className=\"font-semibold\">\n                                                        {item.name} x {item.quantity}\n                                                    </p>\n                                                </div>\n                                                <p>\n                                                    <Price currencyCode={contextState.currency.code}>\n                                                        {item.price.gross}\n                                                    </Price>\n                                                </p>\n                                            </div>\n                                        </div>\n                                    );\n                                })}\n                                <div className=\"flex flex-col gap-4 border-t-2 border-grey4 py-4 items-end px-4 mt-5\">\n                                    <div className=\"flex text-grey3 justify-between w-60\">\n                                        <p>Net</p>\n                                        <p>\n                                            <Price currencyCode={contextState.currency.code}>{order.total.net}</Price>\n                                        </p>\n                                    </div>\n                                    <div className=\"flex text-grey3 justify-between w-60\">\n                                        <p>Tax amount</p>\n                                        <p>\n                                            <Price currencyCode={contextState.currency.code}>\n                                                {order.total.gross - order.total.net}\n                                            </Price>\n                                        </p>\n                                    </div>\n                                    <div className=\"flex font-bold text-xl justify-between w-60\">\n                                        <p>Paid</p>\n                                        <p>\n                                            <Price currencyCode={contextState.currency.code}>{order.total.gross}</Price>\n                                        </p>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                ) : (\n                    <div className=\"min-h-[70vh] items-center justify-center flex max-w-[500px] mx-auto\">\n                        <div className=\"mx-auto items-center justify-center flex w-full \">\n                            <MagickLoginForm title=\"Login\" onlyLogin actionTitle=\"Login\" />\n                        </div>\n                    </div>\n                )}\n            </ClientOnly>\n        </div>\n    );\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,wBAA8B;AAC9B,4BAA6D;;;ACL7D,mBAAoC;AAMpC,2BAA2B;AAiCC;AA/B5B,IAAO,gBAAQ,CAAC,EAAE,IAAI,2BAAAA,2BAA0B,MAA0D;AACtG,QAAM,CAAC,UAAU,WAAW,QAAI,uBAAS,CAAC;AAC1C,QAAM,CAAC,OAAO,QAAQ,QAAI,uBAAqB,IAAI;AACnD,QAAM,EAAE,OAAO,aAAa,IAAI,cAAc;AAC9C,QAAM,EAAE,gBAAgB,IAAI,QAAQ;AAEpC,8BAAU,MAAM;AACZ,QAAI;AACJ,KAAC,YAAY;AACT,UAAI;AACA;AAAA,UACI,MAAM,WAAW;AAAA,YACb,UAAU,aAAa;AAAA,YACvB,eAAe,aAAa;AAAA,UAChC,CAAC,EAAE,WAAW,EAAE;AAAA,QACpB;AAAA,MACJ,SAAS,WAAP;AACE,kBAAU,WAAW,MAAM;AACvB,sBAAY,WAAW,CAAC;AAAA,QAC5B,GAAG,MAAM,QAAQ;AAAA,MACrB;AAAA,IACJ,GAAG;AACH,WAAO,MAAM,aAAa,OAAO;AAAA,EACrC,GAAG,CAAC,IAAI,QAAQ,CAAC;AAEjB,SACI,mDAAC,SAAI,WAAU,8DACX,6DAAC,mCACI,mBAAS,mBAAmBA,6BACzB,mDAAC,SAAI,WAAU,iBACX,6DAAC,SAAI,WAAU,SACX;AAAA,uDAAC,QAAG,WAAU,sBAAqB,kCAAnC;AAAA;AAAA;AAAA;AAAA,WAAqD;AAAA,IACrD,mDAAC,OAAE,WAAU,QAAO,0CAApB;AAAA;AAAA;AAAA;AAAA,WAA8C;AAAA,IAC9C,mDAAC,OAAE;AAAA;AAAA,MAAoB,MAAM;AAAA,MAAG;AAAA,SAAhC;AAAA;AAAA;AAAA;AAAA,WAAiC;AAAA,IACjC,mDAAC,SAAI,WAAU,QACV;AAAA,YAAM,KAAK,IAAI,CAAC,MAAW,UAAkB;AAC1C,eACI,mDAAC,SAAgB,WAAU,mDACvB;AAAA,6DAAC,SAAI,WAAU,0EACX,6DAAC,SAAI,KAAK,KAAK,YAAf;AAAA;AAAA;AAAA;AAAA,iBAAyB,KAD7B;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,UACA,mDAAC,SAAI,WAAU,+BACX;AAAA,+DAAC,SACG,6DAAC,OAAE,WAAU,iBACR;AAAA,mBAAK;AAAA,cAAK;AAAA,cAAI,KAAK;AAAA,iBADxB;AAAA;AAAA;AAAA;AAAA,mBAEA,KAHJ;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA,YACA,mDAAC,OACG,6DAAC,SAAM,cAAc,aAAa,SAAS,MACtC,eAAK,MAAM,SADhB;AAAA;AAAA;AAAA;AAAA,mBAEA,KAHJ;AAAA;AAAA;AAAA;AAAA,mBAIA;AAAA,eAVJ;AAAA;AAAA;AAAA;AAAA,iBAWA;AAAA,aAfM,OAAV;AAAA;AAAA;AAAA;AAAA,eAgBA;AAAA,MAER,CAAC;AAAA,MACD,mDAAC,SAAI,WAAU,wEACX;AAAA,2DAAC,SAAI,WAAU,wCACX;AAAA,6DAAC,OAAE,mBAAH;AAAA;AAAA;AAAA;AAAA,iBAAM;AAAA,UACN,mDAAC,OACG,6DAAC,SAAM,cAAc,aAAa,SAAS,MAAO,gBAAM,MAAM,OAA9D;AAAA;AAAA;AAAA;AAAA,iBAAkE,KADtE;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aAJJ;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,QACA,mDAAC,SAAI,WAAU,wCACX;AAAA,6DAAC,OAAE,0BAAH;AAAA;AAAA;AAAA;AAAA,iBAAa;AAAA,UACb,mDAAC,OACG,6DAAC,SAAM,cAAc,aAAa,SAAS,MACtC,gBAAM,MAAM,QAAQ,MAAM,MAAM,OADrC;AAAA;AAAA;AAAA;AAAA,iBAEA,KAHJ;AAAA;AAAA;AAAA;AAAA,iBAIA;AAAA,aANJ;AAAA;AAAA;AAAA;AAAA,eAOA;AAAA,QACA,mDAAC,SAAI,WAAU,+CACX;AAAA,6DAAC,OAAE,oBAAH;AAAA;AAAA;AAAA;AAAA,iBAAO;AAAA,UACP,mDAAC,OACG,6DAAC,SAAM,cAAc,aAAa,SAAS,MAAO,gBAAM,MAAM,SAA9D;AAAA;AAAA;AAAA;AAAA,iBAAoE,KADxE;AAAA;AAAA;AAAA;AAAA,iBAEA;AAAA,aAJJ;AAAA;AAAA;AAAA;AAAA,eAKA;AAAA,WApBJ;AAAA;AAAA;AAAA;AAAA,aAqBA;AAAA,SA3CJ;AAAA;AAAA;AAAA;AAAA,WA4CA;AAAA,OAhDJ;AAAA;AAAA;AAAA;AAAA,SAiDA,KAlDJ;AAAA;AAAA;AAAA;AAAA,SAmDA,IAEA,mDAAC,SAAI,WAAU,uEACX,6DAAC,SAAI,WAAU,oDACX,6DAAC,mBAAgB,OAAM,SAAQ,WAAS,MAAC,aAAY,WAArD;AAAA;AAAA;AAAA;AAAA,SAA6D,KADjE;AAAA;AAAA;AAAA;AAAA,SAEA,KAHJ;AAAA;AAAA;AAAA;AAAA,SAIA,KA3DR;AAAA;AAAA;AAAA;AAAA,SA6DA,KA9DJ;AAAA;AAAA;AAAA;AAAA,SA+DA;AAER;;;AD3EW,IAAAC,0BAAA;AAFX,IAAO,aAAQ,MAAM;AACjB,QAAM,EAAE,SAAS,2BAAAC,2BAA0B,IAAI,cAAc;AAC7D,SAAO,oDAAC,iBAAM,IAAI,SAAS,2BAA2BA,8BAA/C;AAAA;AAAA;AAAA;AAAA,SAA0E;AACrF;",
  "names": ["isServerSideAuthenticated", "import_jsx_dev_runtime", "isServerSideAuthenticated"]
}
