{
  "version": 3,
  "sources": ["../../../../../src/routes/$langstore/shop/$folder.$product.tsx", "../../../../../src/ui/pages/Product.tsx", "../../../../../src/ui/components/product/dimensions-table.tsx", "../../../../../src/ui/components/crystallize-components/properties-table.tsx", "../../../../../src/ui/components/product/files.tsx", "../../../../../src/ui/components/product/product-body.tsx", "../../../../../src/ui/components/product/stock-location.tsx", "../../../../../src/ui/components/product/topic-labels.tsx"],
  "sourcesContent": ["import { HttpCacheHeaderTaggerFromLoader, StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport { HeadersFunction, json, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { getStoreFront } from '~/core/storefront.server';\nimport { buildMetas } from '~/use-cases/MicrodataBuilder';\nimport { getContext } from '~/use-cases/http/utils';\nimport Product from '~/ui/pages/Product';\nimport dataFetcherForShapePage from '~/core/dataFetcherForShapePage.server';\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport let meta: MetaFunction = ({ data }) => {\n    return buildMetas(data.data);\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const path = `/shop/${params.folder}/${params.product}`;\n    const { shared } = await getStoreFront(requestContext.host);\n    const data = await dataFetcherForShapePage('product', path, requestContext, params);\n    return json({ data }, StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', [path], shared.config.tenantIdentifier));\n};\n\nexport default () => {\n    const { data } = useLoaderData();\n    return <Product data={data} />;\n};\n", "import { useEffect, useState } from 'react';\nimport { useAppContext } from '../app-context/provider';\nimport { AddToCartBtn } from '../components/add-to-cart-button';\nimport { ImageGallery } from '../components/image-gallery';\nimport { Product } from '../components/item/product';\nimport type { Product as ProductType } from '~/use-cases/contracts/Product';\nimport { Price } from '../components/price';\nimport { ProductBody } from '../components/product/product-body';\nimport { StockLocations } from '../components/product/stock-location';\nimport { TopicLabels } from '../components/product/topic-labels';\nimport { VariantSelector } from '../components/variant-selector';\nimport { ProductVariant } from '~/use-cases/contracts/ProductVariant';\nimport { buildSchemaMarkup } from '~/use-cases/SchemaMarkupBuilder';\n\nexport default ({\n    data,\n}: {\n    data: {\n        product: ProductType;\n        preSelectedSku: string;\n    };\n}) => {\n    const { _t } = useAppContext();\n    const { product, preSelectedSku } = data;\n\n    const primaryVariant = product.variants.find((variant) => variant.sku === preSelectedSku) ?? product.defaultVariant;\n    let [selectedVariant, setSelectedVariant] = useState(primaryVariant);\n    const description = selectedVariant.description || product.description;\n\n    useEffect(() => {\n        setSelectedVariant(primaryVariant);\n    }, [product]);\n\n    return (\n        <>\n            <script\n                type=\"application/ld+json\"\n                dangerouslySetInnerHTML={{\n                    __html: JSON.stringify(buildSchemaMarkup(product)),\n                }}\n            />\n            <div className=\"pl-6 md:px-6 mx-auto xl:container full\">\n                <div className=\"flex gap-20 lg:flex-row flex-col-reverse \">\n                    <div className=\"lg:w-4/6 w-full pr-6 md:pr-6\">\n                        <div className=\"img-container overflow-hidden rounded-md\">\n                            <ImageGallery images={selectedVariant.images} />\n                        </div>\n                        <ProductBody\n                            story={product?.story}\n                            propertiesTable={product?.specifications}\n                            dimensions={product?.dimensions}\n                            downloads={product?.downloads}\n                        />\n                    </div>\n                    <div className=\"lg:w-2/6 w-full\">\n                        <div className=\"flex flex-col gap-2 sticky top-16 pb-10\">\n                            <div className=\"mb-2\">{product.topics && <TopicLabels topics={product.topics} />}</div>\n                            <div className=\"pr-6 md:pr-6\">\n                                <h1 className=\"font-bold text-4xl mb-2\">{product.title}</h1>\n                                <p className=\"text-md font-normal\">{description}</p>\n                            </div>\n                            <VariantSelector\n                                variants={product.variants}\n                                selectedVariant={selectedVariant}\n                                onVariantChange={(variant: ProductVariant) => {\n                                    const url = new URL(window.location.href);\n                                    url.searchParams.set('sku', variant.sku);\n                                    window.history.pushState({}, '', url);\n                                    setSelectedVariant(variant);\n                                }}\n                                renderingType=\"default\"\n                            />\n                            {selectedVariant && (\n                                <div className=\"flex justify-between md:items-end sm:flex-row flex-col  sm:gap-1 gap-4\">\n                                    <Price variant={selectedVariant} />\n                                    <AddToCartBtn pack={[{ variant: selectedVariant, quantity: 1 }]} />\n                                </div>\n                            )}\n                            <div className=\"bg-[#dfdfdf] h-[1px] mt-5\" />\n                            <StockLocations locations={Object.values(selectedVariant.stockLocations)} />\n                        </div>\n                    </div>\n                </div>\n\n                {product.relatedItems && (\n                    <div className=\"w-full border-t border-[#dfdfdf] pr-6 sm:pr-0\">\n                        <h2 className=\"font-bold mt-20 mb-4 text-xl\">{_t('relatedProducts')}</h2>\n                        <div className=\"grid gap-5 grid-cols-2 grid md:grid-cols-4 lg:grid-cols-5 pb-5\">\n                            {product.relatedItems.map((item, index) => (\n                                <Product item={item} key={`${item.path}-${index}`} />\n                            ))}\n                        </div>\n                    </div>\n                )}\n            </div>\n        </>\n    );\n};\n", "import Arrow from '~/assets/arrow.svg';\nimport { useAppContext } from '../../app-context/provider';\nimport { Dimensions } from '~/use-cases/contracts/Dimensions';\n\nexport const DimensionsTable: React.FC<{ dimensions: Dimensions }> = ({ dimensions }) => {\n    const { _t } = useAppContext();\n    if (Object.keys(dimensions).length === 0) {\n        return null;\n    }\n    return (\n        <details className=\"border-t border-[#dfdfdf] hover:bg-[#fefefe] frntr-accordination\" open>\n            <summary className=\"font-bold text-2xl py-10 flex items-center justify-between w-full\">\n                <span>{_t('dimensions')}</span>\n                <img src={`${Arrow}`} alt=\"Arrow\" className=\"frntr-accordination-arrow w-[20px] h-[20px] mr-4\" />\n            </summary>\n\n            <div className=\"rounded-md h-auto -mt-4 mb-10\">\n                <div>\n                    {Object.keys(dimensions).map((key, index) => {\n                        const dimension = dimensions[key];\n                        return (\n                            <div key={`${index}-${key}`} className=\"flex justify-between py-4 px-2 odd:bg-[#efefef]\">\n                                <p className=\"font-semibold text-md\">{dimension.title}</p>\n                                <p className=\"text-md\">\n                                    {dimension.value}\n                                    {dimension.unit}\n                                </p>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n        </details>\n    );\n};\n", "import Arrow from '~/assets/arrow.svg';\nimport { CrystallizePropertiesTable } from '~/use-cases/contracts/PropertiesTable';\n\nexport const PropertiesTable: React.FC<{ table: CrystallizePropertiesTable }> = ({ table }) => {\n    return (\n        <details className=\"border-t border-[#dfdfdf] mt-20 hover:bg-[#fefefe] frntr-accordination\" open>\n            <summary className=\"font-bold text-2xl py-10 flex items-center justify-between w-full\">\n                <span>{table?.title}</span>\n                <img src={`${Arrow}`} alt=\"Arrow\" className=\"frntr-accordination-arrow w-[20px] h-[20px] mr-4\" />\n            </summary>\n            {table.properties && (\n                <div className=\"rounded-md h-auto -mt-4 mb-10\">\n                    <div>\n                        {Object.keys(table.properties).map((key) => (\n                            <div className=\"flex justify-between py-4 px-2 odd:bg-[#efefef]\" key={key}>\n                                <p className=\"font-semibold text-md\">{key}</p>\n                                <p className=\"text-md\">{table.properties[key]}</p>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n            )}\n        </details>\n    );\n};\n", "import FileDownloadIcon from '~/assets/documentDownloadIcon.svg';\nimport { ContentTransformer } from '@crystallize/reactjs-components/dist/content-transformer';\nimport Arrow from '~/assets/arrow.svg';\nimport { useAppContext } from '../../app-context/provider';\nimport { FileDownload } from '~/use-cases/contracts/FileDownload';\n\nexport const Files: React.FC<{ files: FileDownload[] }> = ({ files }) => {\n    const { _t } = useAppContext();\n    return (\n        <details className=\"border-t border-[#dfdfdf] hover:bg-[#fefefe] frntr-accordination min-h-fit\" open>\n            <summary className=\"font-bold text-2xl py-10 flex items-center justify-between w-full\">\n                <span>{_t('specifications')}</span>\n                <img src={`${Arrow}`} alt=\"Arrow\" className=\"frntr-accordination-arrow w-[20px] h-[20px] mr-4\" />\n            </summary>\n\n            {files.length > 0 && (\n                <div className=\"grid gap-5 grid-col-1 sm:grid-cols-2  lg:grid-cols-2 xl:grid-cols-3 h-auto -mt-4 mb-10\">\n                    {files.map((file, index) => {\n                        return (\n                            <div\n                                key={index}\n                                className=\"bg-[#efefef] p-6 min-h-[300px] flex h-full flex-col justify-between w-full rounded-md\"\n                            >\n                                <div className=\"mt-2 gap-2 mb-4\">\n                                    <img\n                                        className=\"w-[25px] h-[25px] mb-2\"\n                                        src={`${FileDownloadIcon}`}\n                                        width=\"40\"\n                                        height=\"40\"\n                                        alt=\"User icon\"\n                                    />\n                                    <p className=\"font-semibold text-md\">{file.title}</p>\n                                    <div className=\"text-sm text-elipsis\">\n                                        <ContentTransformer json={file.description?.json} />\n                                    </div>\n                                </div>\n\n                                {files.length > 0 && (\n                                    <div className=\"flex text-sm flex-col\">\n                                        {file.files.map((file) => (\n                                            <a className=\"mt-1 underline truncate\" href={file.url} key={file.url}>\n                                                \u279E {file.title}\n                                            </a>\n                                        ))}\n                                    </div>\n                                )}\n                            </div>\n                        );\n                    })}\n                </div>\n            )}\n        </details>\n    );\n};\n", "import { DimensionsTable } from './dimensions-table';\nimport { ParagraphCollection } from '../crystallize-components/paragraph-collection';\nimport { PropertiesTable } from '../crystallize-components/properties-table';\nimport { Files } from '../../components/product/files';\nimport { Paragraph } from '../../../use-cases/contracts/Paragraph';\nimport { CrystallizePropertiesTable } from '../../../use-cases/contracts/PropertiesTable';\nimport { FileDownload } from '../../../use-cases/contracts/FileDownload';\nimport { Dimensions } from '../../../use-cases/contracts/Dimensions';\n\nexport const ProductBody: React.FC<{\n    story?: Paragraph[];\n    dimensions?: Dimensions;\n    propertiesTable?: CrystallizePropertiesTable[];\n    downloads?: FileDownload[];\n}> = ({ story, dimensions, propertiesTable, downloads }) => {\n    return (\n        <>\n            {story && <ParagraphCollection paragraphs={story} />}\n            <div className=\"mt-20\">\n                {propertiesTable &&\n                    propertiesTable.map((table: CrystallizePropertiesTable, index: number) => (\n                        <PropertiesTable table={table} key={index} />\n                    ))}\n                {dimensions && <DimensionsTable dimensions={dimensions} />}\n                {downloads && downloads.length > 0 && <Files files={downloads!} />}\n            </div>\n        </>\n    );\n};\n", "import StockIcon from '~/assets/stockIcon.svg';\nimport { useState } from 'react';\nimport { useAppContext } from '../../app-context/provider';\nimport { StockLocation } from '../../../use-cases/contracts/StockLocation';\n\nconst StockIndicators: React.FC<{ location: StockLocation }> = ({ location }) => {\n    const { _t } = useAppContext();\n    const stock = location.stock || 0;\n    if (stock < 1) {\n        return (\n            <>\n                <div className=\"flex items-center gap-2\">\n                    <img className=\"w-[18px] h-[18px]\" src={`${StockIcon}`} width=\"20\" height=\"20\" alt=\"User icon\" />\n                    <p className=\"font-semibold\">{location.name}</p>\n                    <div className=\"w-2.5 h-2.5 rounded-full bg-[#F42C04]\" />\n                </div>\n                <p className=\"font-medium text-black\">{_t('stock.outOfStock')}</p>\n            </>\n        );\n    }\n    if (stock > 0 && stock < 21) {\n        return (\n            <>\n                <div className=\"flex items-center gap-2\">\n                    <img className=\"w-[18px] h-[18px]\" src={`${StockIcon}`} width=\"20\" height=\"20\" alt=\"User icon\" />\n                    <p className=\"font-semibold\">{location.name}</p>\n                    <div className=\"w-2.5 h-2.5 rounded-full bg-[#FFC60A]\" />\n                </div>\n                <p className=\"font-medium text-black\">{_t('stock.lowStock')}</p>\n            </>\n        );\n    }\n    return (\n        <>\n            <div className=\"flex items-center gap-2\">\n                <img className=\"w-[18px] h-[18px]\" src={`${StockIcon}`} width=\"20\" height=\"20\" alt=\"User icon\" />\n                <p className=\"font-semibold\">{location.name}</p>\n                <div className=\"w-2.5 h-2.5 rounded-full bg-green2\" />\n            </div>\n            <p className=\"font-medium text-green2 text-right\">{_t('stock.inStock')}</p>\n        </>\n    );\n};\n\nexport const StockLocations: React.FC<{ locations: StockLocation[] }> = ({ locations }) => {\n    const [locationCountToShow, setLocationCountToShow] = useState(1);\n    const { _t } = useAppContext();\n    if (locations.length === 0) return null;\n    return (\n        <div>\n            {locations.slice(0, locationCountToShow).map((location) => (\n                <div key={location.identifier} className=\"flex pt-2 items-center gap-2 justify-between\">\n                    <StockIndicators location={location} />\n                </div>\n            ))}\n            {locations.length > 1 && (\n                <button\n                    onClick={() =>\n                        locationCountToShow == locations.length\n                            ? setLocationCountToShow(1)\n                            : setLocationCountToShow(locations.length)\n                    }\n                    className=\"text-[#000] font-regular text-xs ml-7 mt-1 opacity-[0.6] hover:opacity-[1] underline\"\n                >\n                    {locationCountToShow == locations.length\n                        ? _t('stock.showLessAvailability')\n                        : _t('stock.showMoreAvailability', { count: locations.length - 1 })}\n                </button>\n            )}\n        </div>\n    );\n};\n", "import Link from '../../bridge/Link';\nimport { useAppContext } from '../../app-context/provider';\nimport { Topic } from '../../../use-cases/contracts/Topic';\n\nexport const TopicLabels: React.FC<{ topics: Topic[] }> = ({ topics }) => {\n    const { path } = useAppContext();\n    return (\n        <div className=\"flex flex-wrap gap-2\">\n            {topics.map((topic) => (\n                <Link to={path(topic.path)} key={topic.name}>\n                    <div className=\"rounded-md bg-[#efefef] border border-[transparent] hover:border-[#000] px-3 py-1\">\n                        <p className=\"text-xs font-bold\">{topic.name}</p>\n                    </div>\n                </Link>\n            ))}\n        </div>\n    );\n};\n"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "file", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime", "import_jsx_dev_runtime"]
}
