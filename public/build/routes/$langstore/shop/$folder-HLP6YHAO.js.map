{
  "version": 3,
  "sources": ["../../../../../src/routes/$langstore/shop/$folder.tsx"],
  "sourcesContent": ["import { HeadersFunction, json, LinksFunction, LoaderFunction, MetaFunction } from '@remix-run/node';\nimport { useLoaderData } from '@remix-run/react';\nimport { HttpCacheHeaderTaggerFromLoader, StoreFrontAwaretHttpCacheHeaderTagger } from '~/use-cases/http/cache';\nimport sliderStyles from 'rc-slider/assets/index.css';\nimport { getStoreFront } from '~/core/storefront.server';\nimport { buildMetas } from '~/use-cases/MicrodataBuilder';\nimport { getContext } from '~/use-cases/http/utils';\nimport splideStyles from '@splidejs/splide/dist/css/themes/splide-default.min.css';\nimport videoStyles from '@crystallize/reactjs-components/assets/video/styles.css';\nimport Category from '~/ui/pages/Category';\nimport dataFetcherForShapePage from '~/core/dataFetcherForShapePage.server';\n\nexport const links: LinksFunction = () => {\n    return [\n        { rel: 'stylesheet', href: sliderStyles },\n        { rel: 'stylesheet', href: splideStyles },\n        { rel: 'stylesheet', href: videoStyles },\n    ];\n};\n\nexport const headers: HeadersFunction = ({ loaderHeaders }) => {\n    return HttpCacheHeaderTaggerFromLoader(loaderHeaders).headers;\n};\n\nexport let meta: MetaFunction = ({ data }) => {\n    return buildMetas(data);\n};\n\nexport const loader: LoaderFunction = async ({ request, params }) => {\n    const requestContext = getContext(request);\n    const path = `/shop/${params.folder}`;\n    const { shared } = await getStoreFront(requestContext.host);\n    const data = await dataFetcherForShapePage('category', path, requestContext, params);\n\n    return json({ data }, StoreFrontAwaretHttpCacheHeaderTagger('15s', '1w', [path], shared.config.tenantIdentifier));\n};\n\nexport default () => {\n    const { data } = useLoaderData();\n    return <Category data={data} />;\n};\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,wBAA8B;AAM9B,qCAAoC;AA6BzB;AA3BJ,IAAM,QAAuB,MAAM;AACtC,SAAO;AAAA,IACH,EAAE,KAAK,cAAc,MAAM,eAAa;AAAA,IACxC,EAAE,KAAK,cAAc,MAAM,2BAAa;AAAA,IACxC,EAAE,KAAK,cAAc,MAAM,eAAY;AAAA,EAC3C;AACJ;AAMO,IAAI,OAAqB,CAAC,EAAE,KAAK,MAAM;AAC1C,SAAO,WAAW,IAAI;AAC1B;AAWA,IAAO,iBAAQ,MAAM;AACjB,QAAM,EAAE,KAAK,IAAI,cAAc;AAC/B,SAAO,mDAAC,oBAAS,QAAV;AAAA;AAAA;AAAA;AAAA,SAAsB;AACjC;",
  "names": []
}
